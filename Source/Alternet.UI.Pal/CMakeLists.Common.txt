if (APPLE)
    add_compile_options(-x objective-c++)
endif()

set(CMAKE_CXX_VISIBILITY_PRESET hidden)
set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)

file(GLOB_RECURSE Sources "*.cpp")
list(FILTER Sources EXCLUDE REGEX ".*/bin/.*")

add_library(${PROJECT_NAME} SHARED ${Sources})

if (APPLE)
    set(wxWidgets_CONFIG_EXECUTABLE ${PROJECT_SOURCE_DIR}/../../External/WxWidgets/macos-build/wx-config)
else()
    set(wxWidgets_CONFIG_EXECUTABLE ${PROJECT_SOURCE_DIR}/../../External/WxWidgets/gtk-build/wx-config)
endif()

find_package(wxWidgets REQUIRED COMPONENTS net core base webview adv aui html propgrid richtext media stc)
include(${wxWidgets_USE_FILE})

include_directories(".")

target_link_libraries(${PROJECT_NAME} ${wxWidgets_LIBRARIES})

set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "")
set_target_properties(${PROJECT_NAME} PROPERTIES CXX_STANDARD 17)

if (APPLE)
    # Strip binary for release builds
    if (CMAKE_BUILD_TYPE STREQUAL Release)
        add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
                COMMAND ${CMAKE_STRIP} -x ${PROJECT_SOURCE_DIR}/bin/x64/Release/${PROJECT_NAME}.dylib)
    endif ()
endif ()

if (NOT APPLE)
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(GTK REQUIRED gtk+-3.0)

    include_directories(${GTK_INCLUDE_DIRS})
    link_directories(${GTK_LIBRARY_DIRS})
    add_definitions(${GTK_CFLAGS_OTHER})

    target_link_libraries(${PROJECT_NAME} ${GTK_LIBRARIES})
endif()


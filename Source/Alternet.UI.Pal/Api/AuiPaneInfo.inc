// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>
public:
static SizeI GetBestSize(void* handle);
static SizeI GetMinSize(void* handle);
static SizeI GetMaxSize(void* handle);
static void Delete(void* handle);
static void* CreateAuiPaneInfo();
static void SafeSet(void* handle, void* source);
static bool IsOk(void* handle);
static bool IsFixed(void* handle);
static bool IsResizable(void* handle);
static bool IsShown(void* handle);
static bool IsFloating(void* handle);
static bool IsDocked(void* handle);
static bool IsToolbar(void* handle);
static bool IsTopDockable(void* handle);
static bool IsBottomDockable(void* handle);
static bool IsLeftDockable(void* handle);
static bool IsRightDockable(void* handle);
static bool IsDockable(void* handle);
static bool IsFloatable(void* handle);
static bool IsMovable(void* handle);
static bool IsDestroyOnClose(void* handle);
static bool IsMaximized(void* handle);
static bool HasCaption(void* handle);
static bool HasGripper(void* handle);
static bool HasBorder(void* handle);
static bool HasCloseButton(void* handle);
static bool HasMaximizeButton(void* handle);
static bool HasMinimizeButton(void* handle);
static bool HasPinButton(void* handle);
static bool HasGripperTop(void* handle);
static void Window(void* handle, void* window);
static void Name(void* handle, const string& value);
static void Caption(void* handle, const string& value);
static void Image(void* handle, ImageSet* bitmap);
static void Left(void* handle);
static void Right(void* handle);
static void Top(void* handle);
static void Bottom(void* handle);
static void Center(void* handle);
static void Direction(void* handle, int direction);
static void Layer(void* handle, int layer);
static void Row(void* handle, int row);
static void Position(void* handle, int pos);
static void BestSize(void* handle, int x, int y);
static void MinSize(void* handle, int x, int y);
static void MaxSize(void* handle, int x, int y);
static void FloatingPosition(void* handle, int x, int y);
static void FloatingSize(void* handle, int x, int y);
static void Fixed(void* handle);
static void Resizable(void* handle, bool resizable);
static void Dock(void* handle);
static void Float(void* handle);
static void Hide(void* handle);
static void Show(void* handle, bool show);
static void CaptionVisible(void* handle, bool visible);
static void Maximize(void* handle);
static void Restore(void* handle);
static void PaneBorder(void* handle, bool visible);
static void Gripper(void* handle, bool visible);
static void GripperTop(void* handle, bool attop);
static void CloseButton(void* handle, bool visible);
static void MaximizeButton(void* handle, bool visible);
static void MinimizeButton(void* handle, bool visible);
static void PinButton(void* handle, bool visible);
static void DestroyOnClose(void* handle, bool b);
static void TopDockable(void* handle, bool b);
static void BottomDockable(void* handle, bool b);
static void LeftDockable(void* handle, bool b);
static void RightDockable(void* handle, bool b);
static void Floatable(void* handle, bool b);
static void Movable(void* handle, bool b);
static void DockFixed(void* handle, bool b);
static void Dockable(void* handle, bool b);
static bool IsValid(void* handle);
static void DefaultPane(void* handle);
static void CenterPane(void* handle);
static void ToolbarPane(void* handle);
static void SetFlag(void* handle, int flag, bool option_state);
static bool HasFlag(void* handle, int flag);
public:
AuiPaneInfo();
protected:
virtual ~AuiPaneInfo();
private:
BYREF_ONLY(AuiPaneInfo);

// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2025 AlterNET Software.</auto-generated>

#pragma once

#include "PageSetupDialog.h"
#include "PrintDocument.h"
#include "Window.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API PageSetupDialog* PageSetupDialog_Create_()
{
    return MarshalExceptions<PageSetupDialog*>([&](){
        return new PageSetupDialog();
    });
}

ALTERNET_UI_API PrintDocument* PageSetupDialog_GetDocument_(PageSetupDialog* obj)
{
    return MarshalExceptions<PrintDocument*>([&](){
        return obj->GetDocument();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetDocument_(PageSetupDialog* obj, PrintDocument* value)
{
    MarshalExceptions<void>([&](){
        obj->SetDocument(value);
    });
}

ALTERNET_UI_API float PageSetupDialog_GetMinMarginLeft_(PageSetupDialog* obj)
{
    return MarshalExceptions<float>([&](){
        return obj->GetMinMarginLeft();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetMinMarginLeft_(PageSetupDialog* obj, float value)
{
    MarshalExceptions<void>([&](){
        obj->SetMinMarginLeft(value);
    });
}

ALTERNET_UI_API float PageSetupDialog_GetMinMarginTop_(PageSetupDialog* obj)
{
    return MarshalExceptions<float>([&](){
        return obj->GetMinMarginTop();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetMinMarginTop_(PageSetupDialog* obj, float value)
{
    MarshalExceptions<void>([&](){
        obj->SetMinMarginTop(value);
    });
}

ALTERNET_UI_API float PageSetupDialog_GetMinMarginRight_(PageSetupDialog* obj)
{
    return MarshalExceptions<float>([&](){
        return obj->GetMinMarginRight();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetMinMarginRight_(PageSetupDialog* obj, float value)
{
    MarshalExceptions<void>([&](){
        obj->SetMinMarginRight(value);
    });
}

ALTERNET_UI_API float PageSetupDialog_GetMinMarginBottom_(PageSetupDialog* obj)
{
    return MarshalExceptions<float>([&](){
        return obj->GetMinMarginBottom();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetMinMarginBottom_(PageSetupDialog* obj, float value)
{
    MarshalExceptions<void>([&](){
        obj->SetMinMarginBottom(value);
    });
}

ALTERNET_UI_API c_bool PageSetupDialog_GetMinMarginsValueSet_(PageSetupDialog* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetMinMarginsValueSet();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetMinMarginsValueSet_(PageSetupDialog* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetMinMarginsValueSet(value);
    });
}

ALTERNET_UI_API c_bool PageSetupDialog_GetAllowMargins_(PageSetupDialog* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetAllowMargins();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetAllowMargins_(PageSetupDialog* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetAllowMargins(value);
    });
}

ALTERNET_UI_API c_bool PageSetupDialog_GetAllowOrientation_(PageSetupDialog* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetAllowOrientation();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetAllowOrientation_(PageSetupDialog* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetAllowOrientation(value);
    });
}

ALTERNET_UI_API c_bool PageSetupDialog_GetAllowPaper_(PageSetupDialog* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetAllowPaper();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetAllowPaper_(PageSetupDialog* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetAllowPaper(value);
    });
}

ALTERNET_UI_API c_bool PageSetupDialog_GetAllowPrinter_(PageSetupDialog* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetAllowPrinter();
    });
}

ALTERNET_UI_API void PageSetupDialog_SetAllowPrinter_(PageSetupDialog* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetAllowPrinter(value);
    });
}

ALTERNET_UI_API ModalResult PageSetupDialog_ShowModal_(PageSetupDialog* obj, Window* owner)
{
    return MarshalExceptions<ModalResult>([&](){
        return obj->ShowModal(owner);
    });
}


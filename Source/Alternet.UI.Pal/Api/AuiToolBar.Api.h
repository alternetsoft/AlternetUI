// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>

#pragma once

#include "AuiToolBar.h"
#include "ImageSet.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API AuiToolBar* AuiToolBar_Create_()
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<AuiToolBar*>([&](){
    #endif
        return new AuiToolBar();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int64_t AuiToolBar_GetCreateStyle_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int64_t>([&](){
    #endif
        return obj->GetCreateStyle();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetCreateStyle_(AuiToolBar* obj, int64_t value)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetCreateStyle(value);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int AuiToolBar_GetEventToolId_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int>([&](){
    #endif
        return obj->GetEventToolId();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetEventIsDropDownClicked_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetEventIsDropDownClicked();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API PointI_C AuiToolBar_GetEventClickPoint_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<PointI_C>([&](){
    #endif
        return obj->GetEventClickPoint();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API RectI_C AuiToolBar_GetEventItemRect_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<RectI_C>([&](){
    #endif
        return obj->GetEventItemRect();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_DoOnCaptureLost_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->DoOnCaptureLost();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_DoOnLeftUp_(AuiToolBar* obj, int x, int y)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->DoOnLeftUp(x, y);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_DoOnLeftDown_(AuiToolBar* obj, int x, int y)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->DoOnLeftDown(x, y);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_CreateEx_(int64_t styles)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return AuiToolBar::CreateEx(styles);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetArtProvider_(AuiToolBar* obj, void* art)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetArtProvider(art);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_GetArtProvider_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->GetArtProvider();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int AuiToolBar_GetToolKind_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int>([&](){
    #endif
        return obj->GetToolKind(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_AddTool_(AuiToolBar* obj, int toolId, const char16_t* label, ImageSet* bitmapBundle, const char16_t* shortHelpString, int itemKind)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->AddTool(toolId, label, bitmapBundle, shortHelpString, itemKind);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_AddTool2_(AuiToolBar* obj, int toolId, const char16_t* label, ImageSet* bitmapBundle, ImageSet* disabledBitmapBundle, int itemKind, const char16_t* shortHelpString, const char16_t* longHelpString, void* clientData)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->AddTool2(toolId, label, bitmapBundle, disabledBitmapBundle, itemKind, shortHelpString, longHelpString, clientData);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_AddTool3_(AuiToolBar* obj, int toolId, ImageSet* bitmapBundle, ImageSet* disabledBitmapBundle, c_bool toggle, void* clientData, const char16_t* shortHelpString, const char16_t* longHelpString)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->AddTool3(toolId, bitmapBundle, disabledBitmapBundle, toggle, clientData, shortHelpString, longHelpString);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_AddLabel_(AuiToolBar* obj, int toolId, const char16_t* label, int width)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->AddLabel(toolId, label, width);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_AddControl_(AuiToolBar* obj, int toolId, void* control, const char16_t* label)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->AddControl(toolId, control, label);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_AddSeparator_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->AddSeparator(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_AddSpacer_(AuiToolBar* obj, int toolId, int pixels)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->AddSpacer(toolId, pixels);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_AddStretchSpacer_(AuiToolBar* obj, int toolId, int proportion)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->AddStretchSpacer(toolId, proportion);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_Realize_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->Realize();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_FindControl_(AuiToolBar* obj, int windowId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->FindControl(windowId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_FindToolByPosition_(AuiToolBar* obj, int x, int y)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->FindToolByPosition(x, y);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_FindToolByIndex_(AuiToolBar* obj, int idx)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->FindToolByIndex(idx);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void* AuiToolBar_FindTool_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<void*>([&](){
    #endif
        return obj->FindTool(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_Clear_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->Clear();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_DestroyTool_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->DestroyTool(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_DestroyToolByIndex_(AuiToolBar* obj, int idx)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->DestroyToolByIndex(idx);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_DeleteTool_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->DeleteTool(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_DeleteByIndex_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->DeleteByIndex(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int AuiToolBar_GetToolIndex_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int>([&](){
    #endif
        return obj->GetToolIndex(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetToolFits_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetToolFits(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API RectD_C AuiToolBar_GetToolRect_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<RectD_C>([&](){
    #endif
        return obj->GetToolRect(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetToolFitsByIndex_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetToolFitsByIndex(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetToolBarFits_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetToolBarFits();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolBitmapSizeInPixels_(AuiToolBar* obj, SizeI size)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolBitmapSizeInPixels(size);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API SizeI_C AuiToolBar_GetToolBitmapSizeInPixels_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<SizeI_C>([&](){
    #endif
        return obj->GetToolBitmapSizeInPixels();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetOverflowVisible_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetOverflowVisible();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetOverflowVisible_(AuiToolBar* obj, c_bool visible)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetOverflowVisible(visible);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetGripperVisible_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetGripperVisible();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetGripperVisible_(AuiToolBar* obj, c_bool visible)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetGripperVisible(visible);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_ToggleTool_(AuiToolBar* obj, int toolId, c_bool state)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->ToggleTool(toolId, state);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetToolToggled_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetToolToggled(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetMargins_(AuiToolBar* obj, int left, int right, int top, int bottom)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetMargins(left, right, top, bottom);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_EnableTool_(AuiToolBar* obj, int toolId, c_bool state)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->EnableTool(toolId, state);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetToolEnabled_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetToolEnabled(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolDropDown_(AuiToolBar* obj, int toolId, c_bool dropdown)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolDropDown(toolId, dropdown);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetToolDropDown_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetToolDropDown(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolBorderPadding_(AuiToolBar* obj, int padding)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolBorderPadding(padding);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int AuiToolBar_GetToolBorderPadding_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int>([&](){
    #endif
        return obj->GetToolBorderPadding();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolTextOrientation_(AuiToolBar* obj, int orientation)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolTextOrientation(orientation);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int AuiToolBar_GetToolTextOrientation_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int>([&](){
    #endif
        return obj->GetToolTextOrientation();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolPacking_(AuiToolBar* obj, int packing)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolPacking(packing);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int AuiToolBar_GetToolPacking_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int>([&](){
    #endif
        return obj->GetToolPacking();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolProportion_(AuiToolBar* obj, int toolId, int proportion)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolProportion(toolId, proportion);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int AuiToolBar_GetToolProportion_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int>([&](){
    #endif
        return obj->GetToolProportion(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolSeparation_(AuiToolBar* obj, int separation)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolSeparation(separation);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int AuiToolBar_GetToolSeparation_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int>([&](){
    #endif
        return obj->GetToolSeparation();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolSticky_(AuiToolBar* obj, int toolId, c_bool sticky)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolSticky(toolId, sticky);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API c_bool AuiToolBar_GetToolSticky_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<c_bool>([&](){
    #endif
        return obj->GetToolSticky(toolId);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API char16_t* AuiToolBar_GetToolLabel_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<char16_t*>([&](){
    #endif
        return AllocPInvokeReturnString(obj->GetToolLabel(toolId));
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolLabel_(AuiToolBar* obj, int toolId, const char16_t* label)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolLabel(toolId, label);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolBitmap_(AuiToolBar* obj, int toolId, ImageSet* bitmapBundle)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolBitmap(toolId, bitmapBundle);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API char16_t* AuiToolBar_GetToolShortHelp_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<char16_t*>([&](){
    #endif
        return AllocPInvokeReturnString(obj->GetToolShortHelp(toolId));
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolShortHelp_(AuiToolBar* obj, int toolId, const char16_t* helpString)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolShortHelp(toolId, helpString);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API char16_t* AuiToolBar_GetToolLongHelp_(AuiToolBar* obj, int toolId)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<char16_t*>([&](){
    #endif
        return AllocPInvokeReturnString(obj->GetToolLongHelp(toolId));
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolLongHelp_(AuiToolBar* obj, int toolId, const char16_t* helpString)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolLongHelp(toolId, helpString);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API uint64_t AuiToolBar_GetToolCount_(AuiToolBar* obj)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<uint64_t>([&](){
    #endif
        return obj->GetToolCount();
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetToolMinSize_(AuiToolBar* obj, int tool_id, int width, int height)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetToolMinSize(tool_id, width, height);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API SizeI_C AuiToolBar_GetToolMinSize_(AuiToolBar* obj, int tool_id)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<SizeI_C>([&](){
    #endif
        return obj->GetToolMinSize(tool_id);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetAlignment_(AuiToolBar* obj, int tool_id, int l)
{
    #if !defined(__WXMSW__)
    MarshalExceptions<void>([&](){
    #endif
        obj->SetAlignment(tool_id, l);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API int AuiToolBar_GetAlignment_(AuiToolBar* obj, int tool_id)
{
    #if !defined(__WXMSW__)
    return MarshalExceptions<int>([&](){
    #endif
        return obj->GetAlignment(tool_id);
    #if !defined(__WXMSW__)
    });
    #endif
}

ALTERNET_UI_API void AuiToolBar_SetEventCallback_(AuiToolBar::AuiToolBarEventCallbackType callback)
{
    AuiToolBar::SetEventCallback(callback);
}


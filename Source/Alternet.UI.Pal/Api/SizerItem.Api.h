// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>

#pragma once

#include "SizerItem.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API SizerItem* SizerItem_Create_()
{
    return new SizerItem();
}

ALTERNET_UI_API void* SizerItem_CreateSizerItem_(void* window, int proportion, int flag, int border, void* userData)
{
    return SizerItem::CreateSizerItem(window, proportion, flag, border, userData);
}

ALTERNET_UI_API void* SizerItem_CreateSizerItem2_(void* window, void* sizerFlags)
{
    return SizerItem::CreateSizerItem2(window, sizerFlags);
}

ALTERNET_UI_API void* SizerItem_CreateSizerItem3_(void* sizer, int proportion, int flag, int border, void* userData)
{
    return SizerItem::CreateSizerItem3(sizer, proportion, flag, border, userData);
}

ALTERNET_UI_API void* SizerItem_CreateSizerItem4_(void* sizer, void* sizerFlags)
{
    return SizerItem::CreateSizerItem4(sizer, sizerFlags);
}

ALTERNET_UI_API void* SizerItem_CreateSizerItem5_(int width, int height, int proportion, int flag, int border, void* userData)
{
    return SizerItem::CreateSizerItem5(width, height, proportion, flag, border, userData);
}

ALTERNET_UI_API void* SizerItem_CreateSizerItem6_(int width, int height, void* sizerFlags)
{
    return SizerItem::CreateSizerItem6(width, height, sizerFlags);
}

ALTERNET_UI_API void* SizerItem_CreateSizerItem7_()
{
    return SizerItem::CreateSizerItem7();
}

ALTERNET_UI_API void SizerItem_DeleteWindows_(void* handle)
{
    SizerItem::DeleteWindows(handle);
}

ALTERNET_UI_API void SizerItem_DetachSizer_(void* handle)
{
    SizerItem::DetachSizer(handle);
}

ALTERNET_UI_API void SizerItem_DetachWindow_(void* handle)
{
    SizerItem::DetachWindow(handle);
}

ALTERNET_UI_API SizeI_C SizerItem_GetSize_(void* handle)
{
    return SizerItem::GetSize(handle);
}

ALTERNET_UI_API SizeI_C SizerItem_CalcMin_(void* handle)
{
    return SizerItem::CalcMin(handle);
}

ALTERNET_UI_API void SizerItem_SetDimension_(void* handle, PointI pos, SizeI size)
{
    SizerItem::SetDimension(handle, pos, size);
}

ALTERNET_UI_API SizeI_C SizerItem_GetMinSize_(void* handle)
{
    return SizerItem::GetMinSize(handle);
}

ALTERNET_UI_API SizeI_C SizerItem_GetMinSizeWithBorder_(void* handle)
{
    return SizerItem::GetMinSizeWithBorder(handle);
}

ALTERNET_UI_API SizeI_C SizerItem_GetMaxSize_(void* handle)
{
    return SizerItem::GetMaxSize(handle);
}

ALTERNET_UI_API SizeI_C SizerItem_GetMaxSizeWithBorder_(void* handle)
{
    return SizerItem::GetMaxSizeWithBorder(handle);
}

ALTERNET_UI_API void SizerItem_SetMinSize_(void* handle, int x, int y)
{
    SizerItem::SetMinSize(handle, x, y);
}

ALTERNET_UI_API void SizerItem_SetInitSize_(void* handle, int x, int y)
{
    SizerItem::SetInitSize(handle, x, y);
}

ALTERNET_UI_API void SizerItem_SetRatio_(void* handle, int width, int height)
{
    SizerItem::SetRatio(handle, width, height);
}

ALTERNET_UI_API void SizerItem_SetRatio2_(void* handle, float ratio)
{
    SizerItem::SetRatio2(handle, ratio);
}

ALTERNET_UI_API float SizerItem_GetRatio_(void* handle)
{
    return SizerItem::GetRatio(handle);
}

ALTERNET_UI_API RectI_C SizerItem_GetRect_(void* handle)
{
    return SizerItem::GetRect(handle);
}

ALTERNET_UI_API void SizerItem_SetId_(void* handle, int id)
{
    SizerItem::SetId(handle, id);
}

ALTERNET_UI_API int SizerItem_GetId_(void* handle)
{
    return SizerItem::GetId(handle);
}

ALTERNET_UI_API c_bool SizerItem_IsWindow_(void* handle)
{
    return SizerItem::IsWindow(handle);
}

ALTERNET_UI_API c_bool SizerItem_IsSizer_(void* handle)
{
    return SizerItem::IsSizer(handle);
}

ALTERNET_UI_API c_bool SizerItem_IsSpacer_(void* handle)
{
    return SizerItem::IsSpacer(handle);
}

ALTERNET_UI_API void SizerItem_SetProportion_(void* handle, int proportion)
{
    SizerItem::SetProportion(handle, proportion);
}

ALTERNET_UI_API int SizerItem_GetProportion_(void* handle)
{
    return SizerItem::GetProportion(handle);
}

ALTERNET_UI_API void SizerItem_SetFlag_(void* handle, int flag)
{
    SizerItem::SetFlag(handle, flag);
}

ALTERNET_UI_API int SizerItem_GetFlag_(void* handle)
{
    return SizerItem::GetFlag(handle);
}

ALTERNET_UI_API void SizerItem_SetBorder_(void* handle, int border)
{
    SizerItem::SetBorder(handle, border);
}

ALTERNET_UI_API int SizerItem_GetBorder_(void* handle)
{
    return SizerItem::GetBorder(handle);
}

ALTERNET_UI_API void* SizerItem_GetWindow_(void* handle)
{
    return SizerItem::GetWindow(handle);
}

ALTERNET_UI_API void* SizerItem_GetSizer_(void* handle)
{
    return SizerItem::GetSizer(handle);
}

ALTERNET_UI_API SizeI_C SizerItem_GetSpacer_(void* handle)
{
    return SizerItem::GetSpacer(handle);
}

ALTERNET_UI_API c_bool SizerItem_IsShown_(void* handle)
{
    return SizerItem::IsShown(handle);
}

ALTERNET_UI_API void SizerItem_Show_(void* handle, c_bool show)
{
    SizerItem::Show(handle, show);
}

ALTERNET_UI_API void SizerItem_SetUserData_(void* handle, void* userData)
{
    SizerItem::SetUserData(handle, userData);
}

ALTERNET_UI_API void* SizerItem_GetUserData_(void* handle)
{
    return SizerItem::GetUserData(handle);
}

ALTERNET_UI_API PointI_C SizerItem_GetPosition_(void* handle)
{
    return SizerItem::GetPosition(handle);
}

ALTERNET_UI_API c_bool SizerItem_InformFirstDirection_(void* handle, int direction, int size, int availableOtherDir)
{
    return SizerItem::InformFirstDirection(handle, direction, size, availableOtherDir);
}

ALTERNET_UI_API void SizerItem_AssignWindow_(void* handle, void* window)
{
    SizerItem::AssignWindow(handle, window);
}

ALTERNET_UI_API void SizerItem_AssignSizer_(void* handle, void* sizer)
{
    SizerItem::AssignSizer(handle, sizer);
}

ALTERNET_UI_API void SizerItem_AssignSpacer_(void* handle, int w, int h)
{
    SizerItem::AssignSpacer(handle, w, h);
}


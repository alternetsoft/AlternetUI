// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2023 AlterNET Software.</auto-generated>

#pragma once

#include "MenuItem.h"
#include "Menu.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API MenuItem* MenuItem_Create_()
{
    return new MenuItem();
}

ALTERNET_UI_API char16_t* MenuItem_GetManagedCommandId_(MenuItem* obj)
{
    return AllocPInvokeReturnString(obj->GetManagedCommandId());
}

ALTERNET_UI_API void MenuItem_SetManagedCommandId_(MenuItem* obj, const char16_t* value)
{
    obj->SetManagedCommandId(value);
}

ALTERNET_UI_API char16_t* MenuItem_GetText_(MenuItem* obj)
{
    return AllocPInvokeReturnString(obj->GetText());
}

ALTERNET_UI_API void MenuItem_SetText_(MenuItem* obj, const char16_t* value)
{
    obj->SetText(value);
}

ALTERNET_UI_API char16_t* MenuItem_GetRole_(MenuItem* obj)
{
    return AllocPInvokeReturnString(obj->GetRole());
}

ALTERNET_UI_API void MenuItem_SetRole_(MenuItem* obj, const char16_t* value)
{
    obj->SetRole(value);
}

ALTERNET_UI_API c_bool MenuItem_GetChecked_(MenuItem* obj)
{
    return obj->GetChecked();
}

ALTERNET_UI_API void MenuItem_SetChecked_(MenuItem* obj, c_bool value)
{
    obj->SetChecked(value);
}

ALTERNET_UI_API Menu* MenuItem_GetSubmenu_(MenuItem* obj)
{
    return obj->GetSubmenu();
}

ALTERNET_UI_API void MenuItem_SetSubmenu_(MenuItem* obj, Menu* value)
{
    obj->SetSubmenu(value);
}

ALTERNET_UI_API void MenuItem_SetShortcut_(MenuItem* obj, Key key, ModifierKeys modifierKeys)
{
    obj->SetShortcut(key, modifierKeys);
}

ALTERNET_UI_API void MenuItem_SetEventCallback_(MenuItem::MenuItemEventCallbackType callback)
{
    MenuItem::SetEventCallback(callback);
}


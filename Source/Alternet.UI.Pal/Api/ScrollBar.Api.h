// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2025 AlterNET Software.</auto-generated>

#pragma once

#include "ScrollBar.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API ScrollBar* ScrollBar_Create_()
{
    return MarshalExceptions<ScrollBar*>([&](){
        return new ScrollBar();
    });
}

ALTERNET_UI_API int ScrollBar_GetEventTypeID_(ScrollBar* obj)
{
    return MarshalExceptions<int>([&](){
        return obj->GetEventTypeID();
    });
}

ALTERNET_UI_API int ScrollBar_GetEventOldPos_(ScrollBar* obj)
{
    return MarshalExceptions<int>([&](){
        return obj->GetEventOldPos();
    });
}

ALTERNET_UI_API int ScrollBar_GetEventNewPos_(ScrollBar* obj)
{
    return MarshalExceptions<int>([&](){
        return obj->GetEventNewPos();
    });
}

ALTERNET_UI_API c_bool ScrollBar_GetIsVertical_(ScrollBar* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetIsVertical();
    });
}

ALTERNET_UI_API void ScrollBar_SetIsVertical_(ScrollBar* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetIsVertical(value);
    });
}

ALTERNET_UI_API int ScrollBar_GetThumbPosition_(ScrollBar* obj)
{
    return MarshalExceptions<int>([&](){
        return obj->GetThumbPosition();
    });
}

ALTERNET_UI_API void ScrollBar_SetThumbPosition_(ScrollBar* obj, int value)
{
    MarshalExceptions<void>([&](){
        obj->SetThumbPosition(value);
    });
}

ALTERNET_UI_API int ScrollBar_GetRange_(ScrollBar* obj)
{
    return MarshalExceptions<int>([&](){
        return obj->GetRange();
    });
}

ALTERNET_UI_API int ScrollBar_GetThumbSize_(ScrollBar* obj)
{
    return MarshalExceptions<int>([&](){
        return obj->GetThumbSize();
    });
}

ALTERNET_UI_API int ScrollBar_GetPageSize_(ScrollBar* obj)
{
    return MarshalExceptions<int>([&](){
        return obj->GetPageSize();
    });
}

ALTERNET_UI_API void ScrollBar_SetScrollbar_(ScrollBar* obj, int position, int thumbSize, int range, int pageSize, c_bool refresh)
{
    MarshalExceptions<void>([&](){
        obj->SetScrollbar(position, thumbSize, range, pageSize, refresh);
    });
}

ALTERNET_UI_API void ScrollBar_SetEventCallback_(ScrollBar::ScrollBarEventCallbackType callback)
{
    ScrollBar::SetEventCallback(callback);
}


// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2025 AlterNET Software.</auto-generated>

public:
void* OpenCheckedIndicesArray();
int GetCheckedIndicesItemCount(void* array);
int GetCheckedIndicesItemAt(void* array, int index);
void CloseCheckedIndicesArray(void* array);
void ClearChecked();
void SetChecked(int index, bool value);
bool IsChecked(int item);

public:

enum class CheckListBoxEvent
{
    SelectionChanged,
    CheckedChanged,
    ControlRecreated,
};

typedef void* (*CheckListBoxEventCallbackType)(CheckListBox* obj, CheckListBoxEvent event, void* param);

static void SetEventCallback(CheckListBoxEventCallbackType value) { eventCallback = value; }

protected:

bool RaiseEvent(CheckListBoxEvent event, void* parameter = nullptr)
{
if (EventsSuspended()) return false;
if (eventCallback != nullptr)
   return eventCallback(this, event, parameter) != nullptr;
else
   return false;
}

bool RaiseStaticEvent(CheckListBoxEvent event, void* parameter = nullptr)
{
if (EventsSuspended()) return false;
if (eventCallback != nullptr)
   return eventCallback(nullptr, event, parameter) != nullptr;
else
   return false;
}

void* RaiseEventWithPointerResult(CheckListBoxEvent event, void* parameter = nullptr)
{
if (EventsSuspended()) return nullptr;
if (eventCallback != nullptr)
   return eventCallback(this, event, parameter);
else
   return nullptr;
}

private:

inline static CheckListBoxEventCallbackType eventCallback = nullptr;

public:
CheckListBox();

protected:
virtual ~CheckListBox();

private:
BYREF_ONLY(CheckListBox);

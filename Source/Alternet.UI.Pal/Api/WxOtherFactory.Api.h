// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2023 AlterNET Software.</auto-generated>

#pragma once

#include "WxOtherFactory.h"
#include "ImageSet.h"
#include "Font.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API WxOtherFactory* WxOtherFactory_Create_()
{
    return new WxOtherFactory();
}

ALTERNET_UI_API void* WxOtherFactory_CreateRichToolTip_(const char16_t* title, const char16_t* message)
{
    return WxOtherFactory::CreateRichToolTip(title, message);
}

ALTERNET_UI_API void WxOtherFactory_DeleteRichToolTip_(void* handle)
{
    WxOtherFactory::DeleteRichToolTip(handle);
}

ALTERNET_UI_API void WxOtherFactory_RichToolTipSetBkColor_(void* handle, Color color, Color endColor)
{
    WxOtherFactory::RichToolTipSetBkColor(handle, color, endColor);
}

ALTERNET_UI_API void WxOtherFactory_RichToolTipSetIcon_(void* handle, ImageSet* bitmapBundle)
{
    WxOtherFactory::RichToolTipSetIcon(handle, bitmapBundle);
}

ALTERNET_UI_API void WxOtherFactory_RichToolTipSetIcon2_(void* handle, int icon)
{
    WxOtherFactory::RichToolTipSetIcon2(handle, icon);
}

ALTERNET_UI_API void WxOtherFactory_RichToolTipSetTimeout_(void* handle, uint32_t milliseconds, uint32_t millisecondsShowdelay)
{
    WxOtherFactory::RichToolTipSetTimeout(handle, milliseconds, millisecondsShowdelay);
}

ALTERNET_UI_API void WxOtherFactory_RichToolTipSetTipKind_(void* handle, int tipKind)
{
    WxOtherFactory::RichToolTipSetTipKind(handle, tipKind);
}

ALTERNET_UI_API void WxOtherFactory_RichToolTipSetTitleFont_(void* handle, Font* font)
{
    WxOtherFactory::RichToolTipSetTitleFont(handle, font);
}

ALTERNET_UI_API void WxOtherFactory_RichToolTipShowFor_(void* handle, void* window, Int32Rect rect)
{
    WxOtherFactory::RichToolTipShowFor(handle, window, rect);
}

ALTERNET_UI_API void* WxOtherFactory_CreateToolTip_(const char16_t* tip)
{
    return WxOtherFactory::CreateToolTip(tip);
}

ALTERNET_UI_API void WxOtherFactory_DeleteToolTip_(void* handle)
{
    WxOtherFactory::DeleteToolTip(handle);
}

ALTERNET_UI_API char16_t* WxOtherFactory_ToolTipGetTip_(void* handle)
{
    return AllocPInvokeReturnString(WxOtherFactory::ToolTipGetTip(handle));
}

ALTERNET_UI_API void* WxOtherFactory_ToolTipGetWindow_(void* handle)
{
    return WxOtherFactory::ToolTipGetWindow(handle);
}

ALTERNET_UI_API void WxOtherFactory_ToolTipSetTip_(void* handle, const char16_t* tip)
{
    WxOtherFactory::ToolTipSetTip(handle, tip);
}

ALTERNET_UI_API void WxOtherFactory_ToolTipEnable_(c_bool flag)
{
    WxOtherFactory::ToolTipEnable(flag);
}

ALTERNET_UI_API void WxOtherFactory_ToolTipSetAutoPop_(int64_t msecs)
{
    WxOtherFactory::ToolTipSetAutoPop(msecs);
}

ALTERNET_UI_API void WxOtherFactory_ToolTipSetDelay_(int64_t msecs)
{
    WxOtherFactory::ToolTipSetDelay(msecs);
}

ALTERNET_UI_API void WxOtherFactory_ToolTipSetMaxWidth_(int width)
{
    WxOtherFactory::ToolTipSetMaxWidth(width);
}

ALTERNET_UI_API void WxOtherFactory_ToolTipSetReshow_(int64_t msecs)
{
    WxOtherFactory::ToolTipSetReshow(msecs);
}


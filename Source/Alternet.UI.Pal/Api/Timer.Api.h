// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2025 AlterNET Software.</auto-generated>

#pragma once

#include "Timer.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API Timer* Timer_Create_()
{
    return MarshalExceptions<Timer*>([&](){
        return new Timer();
    });
}

ALTERNET_UI_API c_bool Timer_GetEnabled_(Timer* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetEnabled();
    });
}

ALTERNET_UI_API void Timer_SetEnabled_(Timer* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetEnabled(value);
    });
}

ALTERNET_UI_API int Timer_GetInterval_(Timer* obj)
{
    return MarshalExceptions<int>([&](){
        return obj->GetInterval();
    });
}

ALTERNET_UI_API void Timer_SetInterval_(Timer* obj, int value)
{
    MarshalExceptions<void>([&](){
        obj->SetInterval(value);
    });
}

ALTERNET_UI_API c_bool Timer_GetAutoReset_(Timer* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetAutoReset();
    });
}

ALTERNET_UI_API void Timer_SetAutoReset_(Timer* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetAutoReset(value);
    });
}

ALTERNET_UI_API void Timer_Restart_(Timer* obj)
{
    MarshalExceptions<void>([&](){
        obj->Restart();
    });
}

ALTERNET_UI_API void Timer_SetEventCallback_(Timer::TimerEventCallbackType callback)
{
    Timer::SetEventCallback(callback);
}


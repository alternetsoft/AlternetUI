// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2022.</auto-generated>
public:

int GetPageCount();


int GetSelectedPageIndex();
void SetSelectedPageIndex(int value);

void InsertPage(int index, Control* page, const string& title);
void RemovePage(int index, Control* page);
Size GetTotalPreferredSizeFromPageSize(const Size& pageSize);
public:
enum class TabControlEvent
{
    SelectedPageIndexChanged,
};
typedef void* (*TabControlEventCallbackType)(TabControl* obj, TabControlEvent event, void* param);
static void SetEventCallback(TabControlEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(TabControlEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
void* RaiseEventWithPointerResult(TabControlEvent event, void* parameter = nullptr) { if (EventsSuspended()) return nullptr; if (eventCallback != nullptr) return eventCallback(this, event, parameter); else return nullptr; }
private:
inline static TabControlEventCallbackType eventCallback = nullptr;
public:
TabControl();
protected:
virtual ~TabControl();
private:
BYREF_ONLY(TabControl);

// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>
public:

bool GetIsChecked();
void SetIsChecked(bool value);


int GetCheckState();
void SetCheckState(int value);


bool GetThreeState();
void SetThreeState(bool value);


bool GetAlignRight();
void SetAlignRight(bool value);


bool GetAllowAllStatesForUser();
void SetAllowAllStatesForUser(bool value);

public:
enum class CheckBoxEvent
{
    CheckedChanged,
};
typedef void* (*CheckBoxEventCallbackType)(CheckBox* obj, CheckBoxEvent event, void* param);
static void SetEventCallback(CheckBoxEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(CheckBoxEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
void* RaiseEventWithPointerResult(CheckBoxEvent event, void* parameter = nullptr) { if (EventsSuspended()) return nullptr; if (eventCallback != nullptr) return eventCallback(this, event, parameter); else return nullptr; }
private:
inline static CheckBoxEventCallbackType eventCallback = nullptr;
public:
CheckBox();
protected:
virtual ~CheckBox();
private:
BYREF_ONLY(CheckBox);

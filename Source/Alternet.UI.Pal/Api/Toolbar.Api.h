// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>

#pragma once

#include "Toolbar.h"
#include "ToolbarItem.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API Toolbar* Toolbar_Create_()
{
    return MarshalExceptions<Toolbar*>([&](){
            return new Toolbar();
        });
}

ALTERNET_UI_API int Toolbar_GetItemsCount_(Toolbar* obj)
{
    return MarshalExceptions<int>([&](){
            return obj->GetItemsCount();
        });
}

ALTERNET_UI_API c_bool Toolbar_GetItemTextVisible_(Toolbar* obj)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->GetItemTextVisible();
        });
}

ALTERNET_UI_API void Toolbar_SetItemTextVisible_(Toolbar* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
            obj->SetItemTextVisible(value);
        });
}

ALTERNET_UI_API c_bool Toolbar_GetItemImagesVisible_(Toolbar* obj)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->GetItemImagesVisible();
        });
}

ALTERNET_UI_API void Toolbar_SetItemImagesVisible_(Toolbar* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
            obj->SetItemImagesVisible(value);
        });
}

ALTERNET_UI_API ToolbarItemImageToTextDisplayMode Toolbar_GetImageToTextDisplayMode_(Toolbar* obj)
{
    return MarshalExceptions<ToolbarItemImageToTextDisplayMode>([&](){
            return obj->GetImageToTextDisplayMode();
        });
}

ALTERNET_UI_API void Toolbar_SetImageToTextDisplayMode_(Toolbar* obj, ToolbarItemImageToTextDisplayMode value)
{
    MarshalExceptions<void>([&](){
            obj->SetImageToTextDisplayMode(value);
        });
}

ALTERNET_UI_API void* Toolbar_CreateEx_(c_bool mainToolbar)
{
    return MarshalExceptions<void*>([&](){
            return Toolbar::CreateEx(mainToolbar);
        });
}

ALTERNET_UI_API void Toolbar_InsertItemAt_(Toolbar* obj, int index, ToolbarItem* item)
{
    MarshalExceptions<void>([&](){
            obj->InsertItemAt(index, item);
        });
}

ALTERNET_UI_API void Toolbar_RemoveItemAt_(Toolbar* obj, int index)
{
    MarshalExceptions<void>([&](){
            obj->RemoveItemAt(index);
        });
}

ALTERNET_UI_API void Toolbar_Realize_(Toolbar* obj)
{
    MarshalExceptions<void>([&](){
            obj->Realize();
        });
}


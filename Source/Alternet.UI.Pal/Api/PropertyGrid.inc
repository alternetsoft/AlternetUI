// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>
public:

static string GetNameAsLabel();


bool GetHasBorder();
void SetHasBorder(bool value);


int64_t GetCreateStyle();
void SetCreateStyle(int64_t value);

static void* CreateEx(int64_t styles);
void* CreateStringProperty(const string& label, const string& name, const string& value);
void* CreateBoolProperty(const string& label, const string& name, bool value);
void* CreateIntProperty(const string& label, const string& name, int64_t value);
void* CreateFloatProperty(const string& label, const string& name, double value);
void* CreateUIntProperty(const string& label, const string& name, uint64_t value);
void* CreateLongStringProperty(const string& label, const string& name, const string& value);
void* CreateDateProperty(const string& label, const string& name, const DateTime& value);
void Clear();
void* Append(void* property);
void* CreateEnumProperty(const string& label, const string& name, void* choices, int value);
void* CreateFlagsProperty(const string& label, const string& name, void* choices, int value);
bool ClearSelection(bool validation);
void ClearModifiedStatus();
bool CollapseAll();
bool EditorValidate();
bool ExpandAll(bool expand);
void* CreatePropCategory(const string& label, const string& name);
void* GetFirst(int flags);
void* GetProperty(const string& name);
void* GetPropertyByLabel(const string& label);
void* GetPropertyByName(const string& name);
void* GetPropertyByNameAndSubName(const string& name, const string& subname);
void* GetSelection();
string GetPropertyName(void* property);
static void InitAllTypeHandlers();
static void RegisterAdditionalEditors();
bool RestoreEditableState(const string& src, int restoreStates);
string SaveEditableState(int includedStates);
static void SetBoolChoices(const string& trueChoice, const string& falseChoice);
bool SetColumnProportion(uint32_t column, int proportion);
int GetColumnProportion(uint32_t column);
void Sort(int flags);
void RefreshProperty(void* p);
public:
PropertyGrid();
protected:
virtual ~PropertyGrid();
private:
BYREF_ONLY(PropertyGrid);

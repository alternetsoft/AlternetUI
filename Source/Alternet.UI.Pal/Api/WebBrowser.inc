// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>
public:

bool GetEditable();
void SetEditable(bool value);


WebViewZoom GetZoom();
void SetZoom(WebViewZoom value);

string GetCurrentTitle();
string GetCurrentURL();
void LoadURL(const string& url);
public:
enum class WebBrowserEvent
{
    Navigating,
    Navigated,
    Loaded,
    Error,
    NewWindow,
    TitleChanged,
};
typedef void* (*WebBrowserEventCallbackType)(WebBrowser* obj, WebBrowserEvent event, void* param);
static void SetEventCallback(WebBrowserEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(WebBrowserEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
void* RaiseEventWithPointerResult(WebBrowserEvent event, void* parameter = nullptr) { if (EventsSuspended()) return nullptr; if (eventCallback != nullptr) return eventCallback(this, event, parameter); else return nullptr; }
private:
inline static WebBrowserEventCallbackType eventCallback = nullptr;
public:
WebBrowser();
protected:
virtual ~WebBrowser();
private:
BYREF_ONLY(WebBrowser);

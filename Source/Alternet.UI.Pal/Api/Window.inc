// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2022.</auto-generated>
public:

string GetTitle();
void SetTitle(const string& value);


WindowStartPosition GetWindowStartPosition();
void SetWindowStartPosition(WindowStartPosition value);


bool GetShowInTaskbar();
void SetShowInTaskbar(bool value);


bool GetMinimizeEnabled();
void SetMinimizeEnabled(bool value);


bool GetMaximizeEnabled();
void SetMaximizeEnabled(bool value);


bool GetCloseEnabled();
void SetCloseEnabled(bool value);


bool GetAlwaysOnTop();
void SetAlwaysOnTop(bool value);


bool GetIsToolWindow();
void SetIsToolWindow(bool value);


bool GetResizable();
void SetResizable(bool value);


bool GetHasBorder();
void SetHasBorder(bool value);


bool GetHasTitleBar();
void SetHasTitleBar(bool value);

public:
enum class WindowEvent
{
    Closing,
    SizeChanged,
};
typedef void* (*WindowEventCallbackType)(Window* obj, WindowEvent event, void* param);
static void SetEventCallback(WindowEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(WindowEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
private:
inline static WindowEventCallbackType eventCallback = nullptr;
public:
Window();
protected:
virtual ~Window();
private:
BYREF_ONLY(Window);

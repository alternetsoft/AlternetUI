// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>
public:

string GetManagedCommandId();
void SetManagedCommandId(const string& value);


string GetText();
void SetText(const string& value);


string GetRole();
void SetRole(const string& value);


bool GetChecked();
void SetChecked(bool value);


Menu* GetSubmenu();
void SetSubmenu(Menu* value);

void SetShortcut(Key key, ModifierKeys modifierKeys);
public:
enum class MenuItemEvent
{
    Click,
};
typedef void* (*MenuItemEventCallbackType)(MenuItem* obj, MenuItemEvent event, void* param);
static void SetEventCallback(MenuItemEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(MenuItemEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
void* RaiseEventWithPointerResult(MenuItemEvent event, void* parameter = nullptr) { if (EventsSuspended()) return nullptr; if (eventCallback != nullptr) return eventCallback(this, event, parameter); else return nullptr; }
private:
inline static MenuItemEventCallbackType eventCallback = nullptr;
public:
MenuItem();
protected:
virtual ~MenuItem();
private:
BYREF_ONLY(MenuItem);

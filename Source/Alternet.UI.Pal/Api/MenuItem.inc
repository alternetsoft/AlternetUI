// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2025 AlterNET Software.</auto-generated>

public:
string GetManagedCommandId();
void SetManagedCommandId(const string& value);

string GetText();
void SetText(const string& value);

string GetRole();
void SetRole(const string& value);

bool GetChecked();
void SetChecked(bool value);

Menu* GetSubmenu();
void SetSubmenu(Menu* value);

ImageSet* GetNormalImage();
void SetNormalImage(ImageSet* value);

ImageSet* GetDisabledImage();
void SetDisabledImage(ImageSet* value);

void SetShortcut(Key key, ModifierKeys modifierKeys);

public:

enum class MenuItemEvent
{
    Click,
    Highlight,
    Opened,
    Closed,
};

typedef void* (*MenuItemEventCallbackType)(MenuItem* obj, MenuItemEvent event, void* param);

static void SetEventCallback(MenuItemEventCallbackType value) { eventCallback = value; }

protected:

bool RaiseEvent(MenuItemEvent event, void* parameter = nullptr)
{
if (EventsSuspended()) return false;
if (eventCallback != nullptr)
   return eventCallback(this, event, parameter) != nullptr;
else
   return false;
}

bool RaiseStaticEvent(MenuItemEvent event, void* parameter = nullptr)
{
if (EventsSuspended()) return false;
if (eventCallback != nullptr)
   return eventCallback(nullptr, event, parameter) != nullptr;
else
   return false;
}

void* RaiseEventWithPointerResult(MenuItemEvent event, void* parameter = nullptr)
{
if (EventsSuspended()) return nullptr;
if (eventCallback != nullptr)
   return eventCallback(this, event, parameter);
else
   return nullptr;
}

private:

inline static MenuItemEventCallbackType eventCallback = nullptr;

public:
MenuItem();

protected:
virtual ~MenuItem();

private:
BYREF_ONLY(MenuItem);

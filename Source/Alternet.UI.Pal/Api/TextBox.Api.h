// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2022.</auto-generated>

#pragma once

#include "TextBox.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API TextBox* TextBox_Create_()
{
    return MarshalExceptions<TextBox*>([&](){
            return new TextBox();
        });
}

ALTERNET_UI_API char16_t* TextBox_GetText_(TextBox* obj)
{
    return MarshalExceptions<char16_t*>([&](){
            return AllocPInvokeReturnString(obj->GetText());
        });
}

ALTERNET_UI_API void TextBox_SetText_(TextBox* obj, const char16_t* value)
{
    MarshalExceptions<void>([&](){
            obj->SetText(value);
        });
}

ALTERNET_UI_API c_bool TextBox_GetEditControlOnly_(TextBox* obj)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->GetEditControlOnly();
        });
}

ALTERNET_UI_API void TextBox_SetEditControlOnly_(TextBox* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
            obj->SetEditControlOnly(value);
        });
}

ALTERNET_UI_API void TextBox_SetEventCallback_(TextBox::TextBoxEventCallbackType callback)
{
    TextBox::SetEventCallback(callback);
}


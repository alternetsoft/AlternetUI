// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>

#pragma once

#include "SplitterPanel.h"
#include "Control.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API SplitterPanel* SplitterPanel_Create_()
{
    return new SplitterPanel();
}

ALTERNET_UI_API int64_t SplitterPanel_GetStyles_(SplitterPanel* obj)
{
    return obj->GetStyles();
}

ALTERNET_UI_API void SplitterPanel_SetStyles_(SplitterPanel* obj, int64_t value)
{
    obj->SetStyles(value);
}

ALTERNET_UI_API int SplitterPanel_GetMinimumPaneSize_(SplitterPanel* obj)
{
    return obj->GetMinimumPaneSize();
}

ALTERNET_UI_API void SplitterPanel_SetMinimumPaneSize_(SplitterPanel* obj, int value)
{
    obj->SetMinimumPaneSize(value);
}

ALTERNET_UI_API double SplitterPanel_GetSashGravity_(SplitterPanel* obj)
{
    return obj->GetSashGravity();
}

ALTERNET_UI_API void SplitterPanel_SetSashGravity_(SplitterPanel* obj, double value)
{
    obj->SetSashGravity(value);
}

ALTERNET_UI_API int SplitterPanel_GetDefaultSashSize_(SplitterPanel* obj)
{
    return obj->GetDefaultSashSize();
}

ALTERNET_UI_API int SplitterPanel_GetSashSize_(SplitterPanel* obj)
{
    return obj->GetSashSize();
}

ALTERNET_UI_API int SplitterPanel_GetSplitMode_(SplitterPanel* obj)
{
    return obj->GetSplitMode();
}

ALTERNET_UI_API void SplitterPanel_SetSplitMode_(SplitterPanel* obj, int value)
{
    obj->SetSplitMode(value);
}

ALTERNET_UI_API c_bool SplitterPanel_GetSashVisible_(SplitterPanel* obj)
{
    return obj->GetSashVisible();
}

ALTERNET_UI_API void SplitterPanel_SetSashVisible_(SplitterPanel* obj, c_bool value)
{
    obj->SetSashVisible(value);
}

ALTERNET_UI_API c_bool SplitterPanel_GetIsSplit_(SplitterPanel* obj)
{
    return obj->GetIsSplit();
}

ALTERNET_UI_API c_bool SplitterPanel_GetCanDoubleClick_(SplitterPanel* obj)
{
    return obj->GetCanDoubleClick();
}

ALTERNET_UI_API void SplitterPanel_SetCanDoubleClick_(SplitterPanel* obj, c_bool value)
{
    obj->SetCanDoubleClick(value);
}

ALTERNET_UI_API c_bool SplitterPanel_GetCanMoveSplitter_(SplitterPanel* obj)
{
    return obj->GetCanMoveSplitter();
}

ALTERNET_UI_API void SplitterPanel_SetCanMoveSplitter_(SplitterPanel* obj, c_bool value)
{
    obj->SetCanMoveSplitter(value);
}

ALTERNET_UI_API int SplitterPanel_GetSashPosition_(SplitterPanel* obj)
{
    return obj->GetSashPosition();
}

ALTERNET_UI_API void SplitterPanel_SetSashPosition_(SplitterPanel* obj, int value)
{
    obj->SetSashPosition(value);
}

ALTERNET_UI_API c_bool SplitterPanel_GetRedrawOnSashPosition_(SplitterPanel* obj)
{
    return obj->GetRedrawOnSashPosition();
}

ALTERNET_UI_API void SplitterPanel_SetRedrawOnSashPosition_(SplitterPanel* obj, c_bool value)
{
    obj->SetRedrawOnSashPosition(value);
}

ALTERNET_UI_API Control* SplitterPanel_GetControl1_(SplitterPanel* obj)
{
    return obj->GetControl1();
}

ALTERNET_UI_API Control* SplitterPanel_GetControl2_(SplitterPanel* obj)
{
    return obj->GetControl2();
}

ALTERNET_UI_API void* SplitterPanel_CreateEx_(int64_t styles)
{
    return SplitterPanel::CreateEx(styles);
}

ALTERNET_UI_API void SplitterPanel_SetMinSashSize_(int value)
{
    SplitterPanel::SetMinSashSize(value);
}

ALTERNET_UI_API void SplitterPanel_Initialize_(SplitterPanel* obj, Control* window)
{
    obj->Initialize(window);
}

ALTERNET_UI_API c_bool SplitterPanel_Replace_(SplitterPanel* obj, Control* winOld, Control* winNew)
{
    return obj->Replace(winOld, winNew);
}

ALTERNET_UI_API c_bool SplitterPanel_SplitHorizontally_(SplitterPanel* obj, Control* window1, Control* window2, int sashPosition)
{
    return obj->SplitHorizontally(window1, window2, sashPosition);
}

ALTERNET_UI_API c_bool SplitterPanel_SplitVertically_(SplitterPanel* obj, Control* window1, Control* window2, int sashPosition)
{
    return obj->SplitVertically(window1, window2, sashPosition);
}

ALTERNET_UI_API c_bool SplitterPanel_DoUnsplit_(SplitterPanel* obj, Control* toRemove)
{
    return obj->DoUnsplit(toRemove);
}

ALTERNET_UI_API void SplitterPanel_UpdateSize_(SplitterPanel* obj)
{
    obj->UpdateSize();
}

ALTERNET_UI_API void SplitterPanel_SetEventCallback_(SplitterPanel::SplitterPanelEventCallbackType callback)
{
    SplitterPanel::SetEventCallback(callback);
}


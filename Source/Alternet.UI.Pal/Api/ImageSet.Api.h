// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>

#pragma once

#include "ImageSet.h"
#include "InputStream.h"
#include "Image.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API ImageSet* ImageSet_Create_()
{
    return new ImageSet();
}

ALTERNET_UI_API c_bool ImageSet_GetIsOk_(ImageSet* obj)
{
    return obj->GetIsOk();
}

ALTERNET_UI_API c_bool ImageSet_GetIsReadOnly_(ImageSet* obj)
{
    return obj->GetIsReadOnly();
}

ALTERNET_UI_API SizeI_C ImageSet_GetDefaultSize_(ImageSet* obj)
{
    return obj->GetDefaultSize();
}

ALTERNET_UI_API void ImageSet_LoadFromStream_(ImageSet* obj, void* stream)
{
    obj->LoadFromStream(stream);
}

ALTERNET_UI_API void ImageSet_AddImage_(ImageSet* obj, Image* image)
{
    obj->AddImage(image);
}

ALTERNET_UI_API void ImageSet_Clear_(ImageSet* obj)
{
    obj->Clear();
}

ALTERNET_UI_API void ImageSet_LoadSvgFromStream_(ImageSet* obj, void* stream, int width, int height, Color color)
{
    obj->LoadSvgFromStream(stream, width, height, color);
}

ALTERNET_UI_API void ImageSet_InitImage_(ImageSet* obj, Image* image, int width, int height)
{
    obj->InitImage(image, width, height);
}

ALTERNET_UI_API void ImageSet_InitImageFor_(ImageSet* obj, Image* image, void* window)
{
    obj->InitImageFor(image, window);
}

ALTERNET_UI_API SizeI_C ImageSet_GetPreferredBitmapSizeAtScale_(ImageSet* obj, double scale)
{
    return obj->GetPreferredBitmapSizeAtScale(scale);
}

ALTERNET_UI_API SizeI_C ImageSet_GetPreferredBitmapSizeFor_(ImageSet* obj, void* window)
{
    return obj->GetPreferredBitmapSizeFor(window);
}


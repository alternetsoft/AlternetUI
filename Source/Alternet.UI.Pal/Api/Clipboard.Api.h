// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2025 AlterNET Software.</auto-generated>

#pragma once

#include "Clipboard.h"
#include "UnmanagedDataObject.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API Clipboard* Clipboard_Create_()
{
    return MarshalExceptions<Clipboard*>([&](){
        return new Clipboard();
    });
}

ALTERNET_UI_API UnmanagedDataObject* Clipboard_GetDataObject_(Clipboard* obj)
{
    return MarshalExceptions<UnmanagedDataObject*>([&](){
        return obj->GetDataObject();
    });
}

ALTERNET_UI_API void Clipboard_SetDataObject_(Clipboard* obj, UnmanagedDataObject* value)
{
    MarshalExceptions<void>([&](){
        obj->SetDataObject(value);
    });
}

ALTERNET_UI_API c_bool Clipboard_Flush_(Clipboard* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->Flush();
    });
}

ALTERNET_UI_API c_bool Clipboard_IsIntFormatSupported_(Clipboard* obj, int format)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->IsIntFormatSupported(format);
    });
}

ALTERNET_UI_API c_bool Clipboard_IsStrFormatSupported_(Clipboard* obj, const char16_t* format)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->IsStrFormatSupported(format);
    });
}


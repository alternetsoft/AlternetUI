// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>

#pragma once

#include "TextBoxTextAttr.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API TextBoxTextAttr* TextBoxTextAttr_Create_()
{
    return MarshalExceptions<TextBoxTextAttr*>([&](){
            return new TextBoxTextAttr();
        });
}

ALTERNET_UI_API void TextBoxTextAttr_Delete_(void* attr)
{
    MarshalExceptions<void>([&](){
            TextBoxTextAttr::Delete(attr);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_Copy_(TextBoxTextAttr* obj, void* attr)
{
    MarshalExceptions<void>([&](){
            obj->Copy(attr);
        });
}

ALTERNET_UI_API void* TextBoxTextAttr_CreateTextAttr_()
{
    return MarshalExceptions<void*>([&](){
            return TextBoxTextAttr::CreateTextAttr();
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetTextColor_(TextBoxTextAttr* obj, void* attr, Color colText)
{
    MarshalExceptions<void>([&](){
            obj->SetTextColor(attr, colText);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetBackgroundColor_(TextBoxTextAttr* obj, void* attr, Color colBack)
{
    MarshalExceptions<void>([&](){
            obj->SetBackgroundColor(attr, colBack);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetAlignment_(TextBoxTextAttr* obj, void* attr, int alignment)
{
    MarshalExceptions<void>([&](){
            obj->SetAlignment(attr, alignment);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetFontPointSize_(TextBoxTextAttr* obj, void* attr, int pointSize)
{
    MarshalExceptions<void>([&](){
            obj->SetFontPointSize(attr, pointSize);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetFontStyle_(TextBoxTextAttr* obj, void* attr, int fontStyle)
{
    MarshalExceptions<void>([&](){
            obj->SetFontStyle(attr, fontStyle);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetFontWeight_(TextBoxTextAttr* obj, void* attr, int fontWeight)
{
    MarshalExceptions<void>([&](){
            obj->SetFontWeight(attr, fontWeight);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetFontFaceName_(TextBoxTextAttr* obj, void* attr, const char16_t* faceName)
{
    MarshalExceptions<void>([&](){
            obj->SetFontFaceName(attr, faceName);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetFontUnderlined_(TextBoxTextAttr* obj, void* attr, c_bool underlined)
{
    MarshalExceptions<void>([&](){
            obj->SetFontUnderlined(attr, underlined);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetFontUnderlinedEx_(TextBoxTextAttr* obj, void* attr, int type, Color colour)
{
    MarshalExceptions<void>([&](){
            obj->SetFontUnderlinedEx(attr, type, colour);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetFontStrikethrough_(TextBoxTextAttr* obj, void* attr, c_bool strikethrough)
{
    MarshalExceptions<void>([&](){
            obj->SetFontStrikethrough(attr, strikethrough);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetFontFamily_(TextBoxTextAttr* obj, void* attr, int family)
{
    MarshalExceptions<void>([&](){
            obj->SetFontFamily(attr, family);
        });
}

ALTERNET_UI_API Color_C TextBoxTextAttr_GetTextColor_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<Color_C>([&](){
            return obj->GetTextColor(attr);
        });
}

ALTERNET_UI_API Color_C TextBoxTextAttr_GetBackgroundColor_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<Color_C>([&](){
            return obj->GetBackgroundColor(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetAlignment_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetAlignment(attr);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetURL_(TextBoxTextAttr* obj, void* attr, const char16_t* url)
{
    MarshalExceptions<void>([&](){
            obj->SetURL(attr, url);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetFlags_(TextBoxTextAttr* obj, void* attr, int64_t flags)
{
    MarshalExceptions<void>([&](){
            obj->SetFlags(attr, flags);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetParagraphSpacingAfter_(TextBoxTextAttr* obj, void* attr, int spacing)
{
    MarshalExceptions<void>([&](){
            obj->SetParagraphSpacingAfter(attr, spacing);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetParagraphSpacingBefore_(TextBoxTextAttr* obj, void* attr, int spacing)
{
    MarshalExceptions<void>([&](){
            obj->SetParagraphSpacingBefore(attr, spacing);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetLineSpacing_(TextBoxTextAttr* obj, void* attr, int spacing)
{
    MarshalExceptions<void>([&](){
            obj->SetLineSpacing(attr, spacing);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetBulletStyle_(TextBoxTextAttr* obj, void* attr, int style)
{
    MarshalExceptions<void>([&](){
            obj->SetBulletStyle(attr, style);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetBulletNumber_(TextBoxTextAttr* obj, void* attr, int n)
{
    MarshalExceptions<void>([&](){
            obj->SetBulletNumber(attr, n);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetBulletText_(TextBoxTextAttr* obj, void* attr, const char16_t* text)
{
    MarshalExceptions<void>([&](){
            obj->SetBulletText(attr, text);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetPageBreak_(TextBoxTextAttr* obj, void* attr, c_bool pageBreak)
{
    MarshalExceptions<void>([&](){
            obj->SetPageBreak(attr, pageBreak);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetCharacterStyleName_(TextBoxTextAttr* obj, void* attr, const char16_t* name)
{
    MarshalExceptions<void>([&](){
            obj->SetCharacterStyleName(attr, name);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetParagraphStyleName_(TextBoxTextAttr* obj, void* attr, const char16_t* name)
{
    MarshalExceptions<void>([&](){
            obj->SetParagraphStyleName(attr, name);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetListStyleName_(TextBoxTextAttr* obj, void* attr, const char16_t* name)
{
    MarshalExceptions<void>([&](){
            obj->SetListStyleName(attr, name);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetBulletFont_(TextBoxTextAttr* obj, void* attr, const char16_t* bulletFont)
{
    MarshalExceptions<void>([&](){
            obj->SetBulletFont(attr, bulletFont);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetBulletName_(TextBoxTextAttr* obj, void* attr, const char16_t* name)
{
    MarshalExceptions<void>([&](){
            obj->SetBulletName(attr, name);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetTextEffects_(TextBoxTextAttr* obj, void* attr, int effects)
{
    MarshalExceptions<void>([&](){
            obj->SetTextEffects(attr, effects);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetTextEffectFlags_(TextBoxTextAttr* obj, void* attr, int effects)
{
    MarshalExceptions<void>([&](){
            obj->SetTextEffectFlags(attr, effects);
        });
}

ALTERNET_UI_API void TextBoxTextAttr_SetOutlineLevel_(TextBoxTextAttr* obj, void* attr, int level)
{
    MarshalExceptions<void>([&](){
            obj->SetOutlineLevel(attr, level);
        });
}

ALTERNET_UI_API int64_t TextBoxTextAttr_GetFlags_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int64_t>([&](){
            return obj->GetFlags(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetFontSize_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetFontSize(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetFontStyle_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetFontStyle(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetFontWeight_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetFontWeight(attr);
        });
}

ALTERNET_UI_API c_bool TextBoxTextAttr_GetFontUnderlined_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->GetFontUnderlined(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetUnderlineType_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetUnderlineType(attr);
        });
}

ALTERNET_UI_API Color_C TextBoxTextAttr_GetUnderlineColor_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<Color_C>([&](){
            return obj->GetUnderlineColor(attr);
        });
}

ALTERNET_UI_API c_bool TextBoxTextAttr_GetFontStrikethrough_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->GetFontStrikethrough(attr);
        });
}

ALTERNET_UI_API char16_t* TextBoxTextAttr_GetFontFaceName_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<char16_t*>([&](){
            return AllocPInvokeReturnString(obj->GetFontFaceName(attr));
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetFontFamily_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetFontFamily(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetParagraphSpacingAfter_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetParagraphSpacingAfter(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetParagraphSpacingBefore_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetParagraphSpacingBefore(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetLineSpacing_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetLineSpacing(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetBulletStyle_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetBulletStyle(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetBulletNumber_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetBulletNumber(attr);
        });
}

ALTERNET_UI_API char16_t* TextBoxTextAttr_GetBulletText_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<char16_t*>([&](){
            return AllocPInvokeReturnString(obj->GetBulletText(attr));
        });
}

ALTERNET_UI_API char16_t* TextBoxTextAttr_GetURL_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<char16_t*>([&](){
            return AllocPInvokeReturnString(obj->GetURL(attr));
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetTextEffects_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetTextEffects(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetTextEffectFlags_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetTextEffectFlags(attr);
        });
}

ALTERNET_UI_API int TextBoxTextAttr_GetOutlineLevel_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<int>([&](){
            return obj->GetOutlineLevel(attr);
        });
}

ALTERNET_UI_API c_bool TextBoxTextAttr_IsCharacterStyle_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->IsCharacterStyle(attr);
        });
}

ALTERNET_UI_API c_bool TextBoxTextAttr_IsParagraphStyle_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->IsParagraphStyle(attr);
        });
}

ALTERNET_UI_API c_bool TextBoxTextAttr_IsDefault_(TextBoxTextAttr* obj, void* attr)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->IsDefault(attr);
        });
}


// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>

#pragma once

#include "PropertyGrid.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API PropertyGrid* PropertyGrid_Create_()
{
    return MarshalExceptions<PropertyGrid*>([&](){
            return new PropertyGrid();
        });
}

ALTERNET_UI_API char16_t* PropertyGrid_GetNameAsLabel_()
{
    return MarshalExceptions<char16_t*>([&](){
            return AllocPInvokeReturnString(PropertyGrid::GetNameAsLabel());
        });
}

ALTERNET_UI_API c_bool PropertyGrid_GetHasBorder_(PropertyGrid* obj)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->GetHasBorder();
        });
}

ALTERNET_UI_API void PropertyGrid_SetHasBorder_(PropertyGrid* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
            obj->SetHasBorder(value);
        });
}

ALTERNET_UI_API int64_t PropertyGrid_GetCreateStyle_(PropertyGrid* obj)
{
    return MarshalExceptions<int64_t>([&](){
            return obj->GetCreateStyle();
        });
}

ALTERNET_UI_API void PropertyGrid_SetCreateStyle_(PropertyGrid* obj, int64_t value)
{
    MarshalExceptions<void>([&](){
            obj->SetCreateStyle(value);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateEx_(int64_t styles)
{
    return MarshalExceptions<void*>([&](){
            return PropertyGrid::CreateEx(styles);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateStringProperty_(PropertyGrid* obj, const char16_t* label, const char16_t* name, const char16_t* value)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateStringProperty(label, name, value);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateBoolProperty_(PropertyGrid* obj, const char16_t* label, const char16_t* name, c_bool value)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateBoolProperty(label, name, value);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateIntProperty_(PropertyGrid* obj, const char16_t* label, const char16_t* name, int64_t value)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateIntProperty(label, name, value);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateFloatProperty_(PropertyGrid* obj, const char16_t* label, const char16_t* name, double value)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateFloatProperty(label, name, value);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateUIntProperty_(PropertyGrid* obj, const char16_t* label, const char16_t* name, uint64_t value)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateUIntProperty(label, name, value);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateLongStringProperty_(PropertyGrid* obj, const char16_t* label, const char16_t* name, const char16_t* value)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateLongStringProperty(label, name, value);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateDateProperty_(PropertyGrid* obj, const char16_t* label, const char16_t* name, DateTime value)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateDateProperty(label, name, value);
        });
}

ALTERNET_UI_API void PropertyGrid_Clear_(PropertyGrid* obj)
{
    MarshalExceptions<void>([&](){
            obj->Clear();
        });
}

ALTERNET_UI_API void* PropertyGrid_Append_(PropertyGrid* obj, void* property)
{
    return MarshalExceptions<void*>([&](){
            return obj->Append(property);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateEnumProperty_(PropertyGrid* obj, const char16_t* label, const char16_t* name, void* choices, int value)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateEnumProperty(label, name, choices, value);
        });
}

ALTERNET_UI_API void* PropertyGrid_CreateFlagsProperty_(PropertyGrid* obj, const char16_t* label, const char16_t* name, void* choices, int value)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateFlagsProperty(label, name, choices, value);
        });
}

ALTERNET_UI_API c_bool PropertyGrid_ClearSelection_(PropertyGrid* obj, c_bool validation)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->ClearSelection(validation);
        });
}

ALTERNET_UI_API void PropertyGrid_ClearModifiedStatus_(PropertyGrid* obj)
{
    MarshalExceptions<void>([&](){
            obj->ClearModifiedStatus();
        });
}

ALTERNET_UI_API c_bool PropertyGrid_CollapseAll_(PropertyGrid* obj)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->CollapseAll();
        });
}

ALTERNET_UI_API c_bool PropertyGrid_EditorValidate_(PropertyGrid* obj)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->EditorValidate();
        });
}

ALTERNET_UI_API c_bool PropertyGrid_ExpandAll_(PropertyGrid* obj, c_bool expand)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->ExpandAll(expand);
        });
}


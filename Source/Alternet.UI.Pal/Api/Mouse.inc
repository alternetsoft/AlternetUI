// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2022.</auto-generated>
public:
Point GetPosition();
MouseButtonState GetButtonState(MouseButton button);
public:
enum class MouseEvent
{
    MouseMove,
    MouseDown,
    MouseUp,
    MouseDoubleClick,
    MouseWheel,
};
typedef void* (*MouseEventCallbackType)(Mouse* obj, MouseEvent event, void* param);
static void SetEventCallback(MouseEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(MouseEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
private:
inline static MouseEventCallbackType eventCallback = nullptr;
public:
Mouse();
protected:
virtual ~Mouse();
private:
BYREF_ONLY(Mouse);

// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2025 AlterNET Software.</auto-generated>

#pragma once

#include "Keyboard.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API Keyboard* Keyboard_Create_()
{
    return MarshalExceptions<Keyboard*>([&](){
        return new Keyboard();
    });
}

ALTERNET_UI_API char16_t Keyboard_GetInputChar_()
{
    return MarshalExceptions<char16_t>([&](){
        return Keyboard::GetInputChar();
    });
}

ALTERNET_UI_API uint8_t Keyboard_GetInputEventCode_()
{
    return MarshalExceptions<uint8_t>([&](){
        return Keyboard::GetInputEventCode();
    });
}

ALTERNET_UI_API c_bool Keyboard_GetInputHandled_()
{
    return MarshalExceptions<c_bool>([&](){
        return Keyboard::GetInputHandled();
    });
}

ALTERNET_UI_API void Keyboard_SetInputHandled_(c_bool value)
{
    MarshalExceptions<void>([&](){
        Keyboard::SetInputHandled(value);
    });
}

ALTERNET_UI_API Key Keyboard_GetInputKey_()
{
    return MarshalExceptions<Key>([&](){
        return Keyboard::GetInputKey();
    });
}

ALTERNET_UI_API c_bool Keyboard_GetInputIsRepeat_()
{
    return MarshalExceptions<c_bool>([&](){
        return Keyboard::GetInputIsRepeat();
    });
}

ALTERNET_UI_API KeyStates Keyboard_GetKeyState_(Key key)
{
    return MarshalExceptions<KeyStates>([&](){
        return Keyboard::GetKeyState(key);
    });
}

ALTERNET_UI_API void Keyboard_SetEventCallback_(Keyboard::KeyboardEventCallbackType callback)
{
    Keyboard::SetEventCallback(callback);
}


// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2022.</auto-generated>
public:

int GetMinimum();
void SetMinimum(int value);


int GetMaximum();
void SetMaximum(int value);


int GetValue();
void SetValue(int value);

public:
enum class NumericUpDownEvent
{
    ValueChanged,
};
typedef void* (*NumericUpDownEventCallbackType)(NumericUpDown* obj, NumericUpDownEvent event, void* param);
static void SetEventCallback(NumericUpDownEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(NumericUpDownEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
private:
inline static NumericUpDownEventCallbackType eventCallback = nullptr;
public:
NumericUpDown();
protected:
virtual ~NumericUpDown();
private:
BYREF_ONLY(NumericUpDown);

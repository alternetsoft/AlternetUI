// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2022.</auto-generated>

#pragma once

#include "ComboBox.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API ComboBox* ComboBox_Create_()
{
    return MarshalExceptions<ComboBox*>([&](){
            return new ComboBox();
        });
}

ALTERNET_UI_API int ComboBox_GetItemsCount_(ComboBox* obj)
{
    return MarshalExceptions<int>([&](){
            return obj->GetItemsCount();
        });
}

ALTERNET_UI_API c_bool ComboBox_GetIsEditable_(ComboBox* obj)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->GetIsEditable();
        });
}

ALTERNET_UI_API void ComboBox_SetIsEditable_(ComboBox* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
            obj->SetIsEditable(value);
        });
}

ALTERNET_UI_API int ComboBox_GetSelectedIndex_(ComboBox* obj)
{
    return MarshalExceptions<int>([&](){
            return obj->GetSelectedIndex();
        });
}

ALTERNET_UI_API void ComboBox_SetSelectedIndex_(ComboBox* obj, int value)
{
    MarshalExceptions<void>([&](){
            obj->SetSelectedIndex(value);
        });
}

ALTERNET_UI_API char16_t* ComboBox_GetText_(ComboBox* obj)
{
    return MarshalExceptions<char16_t*>([&](){
            return AllocPInvokeReturnString(obj->GetText());
        });
}

ALTERNET_UI_API void ComboBox_SetText_(ComboBox* obj, const char16_t* value)
{
    MarshalExceptions<void>([&](){
            obj->SetText(value);
        });
}

ALTERNET_UI_API void ComboBox_InsertItem_(ComboBox* obj, int index, const char16_t* value)
{
    MarshalExceptions<void>([&](){
            obj->InsertItem(index, value);
        });
}

ALTERNET_UI_API void* ComboBox_CreateItemsInsertion_(ComboBox* obj)
{
    return MarshalExceptions<void*>([&](){
            return obj->CreateItemsInsertion();
        });
}

ALTERNET_UI_API void ComboBox_AddItemToInsertion_(ComboBox* obj, void* insertion, const char16_t* item)
{
    MarshalExceptions<void>([&](){
            obj->AddItemToInsertion(insertion, item);
        });
}

ALTERNET_UI_API void ComboBox_CommitItemsInsertion_(ComboBox* obj, void* insertion, int index)
{
    MarshalExceptions<void>([&](){
            obj->CommitItemsInsertion(insertion, index);
        });
}

ALTERNET_UI_API void ComboBox_RemoveItemAt_(ComboBox* obj, int index)
{
    MarshalExceptions<void>([&](){
            obj->RemoveItemAt(index);
        });
}

ALTERNET_UI_API void ComboBox_ClearItems_(ComboBox* obj)
{
    MarshalExceptions<void>([&](){
            obj->ClearItems();
        });
}

ALTERNET_UI_API void ComboBox_SetEventCallback_(ComboBox::ComboBoxEventCallbackType callback)
{
    ComboBox::SetEventCallback(callback);
}


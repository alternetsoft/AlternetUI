// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>
public:
KeyStates GetKeyState(Key key);
public:
enum class KeyboardEvent
{
    KeyDown,
    KeyUp,
    TextInput,
};
typedef void* (*KeyboardEventCallbackType)(Keyboard* obj, KeyboardEvent event, void* param);
static void SetEventCallback(KeyboardEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(KeyboardEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
void* RaiseEventWithPointerResult(KeyboardEvent event, void* parameter = nullptr) { if (EventsSuspended()) return nullptr; if (eventCallback != nullptr) return eventCallback(this, event, parameter); else return nullptr; }
private:
inline static KeyboardEventCallbackType eventCallback = nullptr;
public:
Keyboard();
protected:
virtual ~Keyboard();
private:
BYREF_ONLY(Keyboard);

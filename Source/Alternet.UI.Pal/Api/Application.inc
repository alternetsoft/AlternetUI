// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2022.</auto-generated>
public:

string GetName();
void SetName(const string& value);


Keyboard* GetKeyboard();


Mouse* GetMouse();

void Run(Window* window);
public:
enum class ApplicationEvent
{
    Idle,
};
typedef void* (*ApplicationEventCallbackType)(Application* obj, ApplicationEvent event, void* param);
static void SetEventCallback(ApplicationEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(ApplicationEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
private:
inline static ApplicationEventCallbackType eventCallback = nullptr;
public:
Application();
protected:
virtual ~Application();
private:
BYREF_ONLY(Application);

// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2023 AlterNET Software.</auto-generated>

#pragma once

#include "Image.h"
#include "InputStream.h"
#include "OutputStream.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API Image* Image_Create_()
{
    return new Image();
}

ALTERNET_UI_API Size_C Image_GetSize_(Image* obj)
{
    return obj->GetSize();
}

ALTERNET_UI_API Int32Size_C Image_GetPixelSize_(Image* obj)
{
    return obj->GetPixelSize();
}

ALTERNET_UI_API c_bool Image_GetIsOk_(Image* obj)
{
    return obj->GetIsOk();
}

ALTERNET_UI_API void Image_LoadFromStream_(Image* obj, void* stream)
{
    obj->LoadFromStream(stream);
}

ALTERNET_UI_API void Image_LoadSvgFromStream_(Image* obj, void* stream, int width, int height, Color color)
{
    obj->LoadSvgFromStream(stream, width, height, color);
}

ALTERNET_UI_API void Image_Initialize_(Image* obj, Size size)
{
    obj->Initialize(size);
}

ALTERNET_UI_API void Image_CopyFrom_(Image* obj, Image* otherImage)
{
    obj->CopyFrom(otherImage);
}

ALTERNET_UI_API void Image_SaveToStream_(Image* obj, void* stream, const char16_t* format)
{
    obj->SaveToStream(stream, format);
}

ALTERNET_UI_API void Image_SaveToFile_(Image* obj, const char16_t* fileName)
{
    obj->SaveToFile(fileName);
}

ALTERNET_UI_API c_bool Image_GrayScale_(Image* obj)
{
    return obj->GrayScale();
}


// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>

#pragma once

#include "FontDialog.h"
#include "Font.h"
#include "Window.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API FontDialog* FontDialog_Create_()
{
    return MarshalExceptions<FontDialog*>([&](){
            return new FontDialog();
        });
}

ALTERNET_UI_API Font* FontDialog_GetFont_(FontDialog* obj)
{
    return MarshalExceptions<Font*>([&](){
            return obj->GetFont();
        });
}

ALTERNET_UI_API void FontDialog_SetFont_(FontDialog* obj, Font* value)
{
    MarshalExceptions<void>([&](){
            obj->SetFont(value);
        });
}

ALTERNET_UI_API char16_t* FontDialog_GetTitle_(FontDialog* obj)
{
    return MarshalExceptions<char16_t*>([&](){
            return AllocPInvokeReturnString(obj->GetTitle());
        });
}

ALTERNET_UI_API void FontDialog_SetTitle_(FontDialog* obj, const char16_t* value)
{
    MarshalExceptions<void>([&](){
            obj->SetTitle(ToOptional(value));
        });
}

ALTERNET_UI_API ModalResult FontDialog_ShowModal_(FontDialog* obj, Window* owner)
{
    return MarshalExceptions<ModalResult>([&](){
            return obj->ShowModal(owner);
        });
}


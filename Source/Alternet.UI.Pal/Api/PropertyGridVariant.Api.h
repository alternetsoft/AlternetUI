// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>

#pragma once

#include "PropertyGridVariant.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API PropertyGridVariant* PropertyGridVariant_Create_()
{
    return new PropertyGridVariant();
}

ALTERNET_UI_API void PropertyGridVariant_Delete_(void* handle)
{
    PropertyGridVariant::Delete(handle);
}

ALTERNET_UI_API void* PropertyGridVariant_CreateVariant_()
{
    return PropertyGridVariant::CreateVariant();
}

ALTERNET_UI_API c_bool PropertyGridVariant_IsNull_(void* handle)
{
    return PropertyGridVariant::IsNull(handle);
}

ALTERNET_UI_API c_bool PropertyGridVariant_Unshare_(void* handle)
{
    return PropertyGridVariant::Unshare(handle);
}

ALTERNET_UI_API void PropertyGridVariant_MakeNull_(void* handle)
{
    PropertyGridVariant::MakeNull(handle);
}

ALTERNET_UI_API void PropertyGridVariant_Clear_(void* handle)
{
    PropertyGridVariant::Clear(handle);
}

ALTERNET_UI_API char16_t* PropertyGridVariant_GetValueType_(void* handle)
{
    return AllocPInvokeReturnString(PropertyGridVariant::GetValueType(handle));
}

ALTERNET_UI_API c_bool PropertyGridVariant_IsType_(void* handle, const char16_t* type)
{
    return PropertyGridVariant::IsType(handle, type);
}

ALTERNET_UI_API char16_t* PropertyGridVariant_MakeString_(void* handle)
{
    return AllocPInvokeReturnString(PropertyGridVariant::MakeString(handle));
}

ALTERNET_UI_API Color_C PropertyGridVariant_GetColor_(void* handle)
{
    return PropertyGridVariant::GetColor(handle);
}

ALTERNET_UI_API double PropertyGridVariant_GetDouble_(void* handle)
{
    return PropertyGridVariant::GetDouble(handle);
}

ALTERNET_UI_API c_bool PropertyGridVariant_GetBool_(void* handle)
{
    return PropertyGridVariant::GetBool(handle);
}

ALTERNET_UI_API int PropertyGridVariant_GetInt_(void* handle)
{
    return PropertyGridVariant::GetInt(handle);
}

ALTERNET_UI_API uint32_t PropertyGridVariant_GetUInt_(void* handle)
{
    return PropertyGridVariant::GetUInt(handle);
}

ALTERNET_UI_API int64_t PropertyGridVariant_GetLong_(void* handle)
{
    return PropertyGridVariant::GetLong(handle);
}

ALTERNET_UI_API uint64_t PropertyGridVariant_GetULong_(void* handle)
{
    return PropertyGridVariant::GetULong(handle);
}

ALTERNET_UI_API DateTime_C PropertyGridVariant_GetDateTime_(void* handle)
{
    return PropertyGridVariant::GetDateTime(handle);
}

ALTERNET_UI_API char16_t* PropertyGridVariant_GetString_(void* handle)
{
    return AllocPInvokeReturnString(PropertyGridVariant::GetString(handle));
}

ALTERNET_UI_API void PropertyGridVariant_SetColor_(void* handle, Color val, uint32_t kind)
{
    PropertyGridVariant::SetColor(handle, val, kind);
}

ALTERNET_UI_API void PropertyGridVariant_SetDouble_(void* handle, double val)
{
    PropertyGridVariant::SetDouble(handle, val);
}

ALTERNET_UI_API void PropertyGridVariant_SetBool_(void* handle, c_bool val)
{
    PropertyGridVariant::SetBool(handle, val);
}

ALTERNET_UI_API void PropertyGridVariant_SetLong_(void* handle, int64_t val)
{
    PropertyGridVariant::SetLong(handle, val);
}

ALTERNET_UI_API void PropertyGridVariant_SetULong_(void* handle, uint64_t val)
{
    PropertyGridVariant::SetULong(handle, val);
}

ALTERNET_UI_API void PropertyGridVariant_SetInt_(void* handle, int val)
{
    PropertyGridVariant::SetInt(handle, val);
}

ALTERNET_UI_API void PropertyGridVariant_SetUInt_(void* handle, uint32_t val)
{
    PropertyGridVariant::SetUInt(handle, val);
}

ALTERNET_UI_API void PropertyGridVariant_SetShort_(void* handle, int16_t val)
{
    PropertyGridVariant::SetShort(handle, val);
}

ALTERNET_UI_API void PropertyGridVariant_SetDateTime_(void* handle, DateTime val)
{
    PropertyGridVariant::SetDateTime(handle, val);
}

ALTERNET_UI_API void PropertyGridVariant_SetString_(void* handle, const char16_t* value)
{
    PropertyGridVariant::SetString(handle, value);
}

ALTERNET_UI_API uint32_t PropertyGridVariant_GetLastColorKind_()
{
    return PropertyGridVariant::GetLastColorKind();
}


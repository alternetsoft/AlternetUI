// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>

#pragma once

#include "WebBrowser.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API WebBrowser* WebBrowser_Create_()
{
    return MarshalExceptions<WebBrowser*>([&](){
            return new WebBrowser();
        });
}

ALTERNET_UI_API c_bool WebBrowser_GetEditable_(WebBrowser* obj)
{
    return MarshalExceptions<c_bool>([&](){
            return obj->GetEditable();
        });
}

ALTERNET_UI_API void WebBrowser_SetEditable_(WebBrowser* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
            obj->SetEditable(value);
        });
}

ALTERNET_UI_API WebViewZoom WebBrowser_GetZoom_(WebBrowser* obj)
{
    return MarshalExceptions<WebViewZoom>([&](){
            return obj->GetZoom();
        });
}

ALTERNET_UI_API void WebBrowser_SetZoom_(WebBrowser* obj, WebViewZoom value)
{
    MarshalExceptions<void>([&](){
            obj->SetZoom(value);
        });
}

ALTERNET_UI_API char16_t* WebBrowser_GetCurrentTitle_(WebBrowser* obj)
{
    return MarshalExceptions<char16_t*>([&](){
            return AllocPInvokeReturnString(obj->GetCurrentTitle());
        });
}

ALTERNET_UI_API char16_t* WebBrowser_GetCurrentURL_(WebBrowser* obj)
{
    return MarshalExceptions<char16_t*>([&](){
            return AllocPInvokeReturnString(obj->GetCurrentURL());
        });
}

ALTERNET_UI_API void WebBrowser_LoadURL_(WebBrowser* obj, const char16_t* url)
{
    MarshalExceptions<void>([&](){
            obj->LoadURL(url);
        });
}

ALTERNET_UI_API void WebBrowser_SetEventCallback_(WebBrowser::WebBrowserEventCallbackType callback)
{
    WebBrowser::SetEventCallback(callback);
}


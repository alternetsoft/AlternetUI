// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>
public:

string GetText();
void SetText(const string& value);


bool GetEditControlOnly();
void SetEditControlOnly(bool value);


bool GetReadOnly();
void SetReadOnly(bool value);


bool GetMultiline();
void SetMultiline(bool value);

public:
enum class TextBoxEvent
{
    TextChanged,
};
typedef void* (*TextBoxEventCallbackType)(TextBox* obj, TextBoxEvent event, void* param);
static void SetEventCallback(TextBoxEventCallbackType value) { eventCallback = value; }
protected:
bool RaiseEvent(TextBoxEvent event, void* parameter = nullptr) { if (EventsSuspended()) return false; if (eventCallback != nullptr) return eventCallback(this, event, parameter) != nullptr; else return false; }
void* RaiseEventWithPointerResult(TextBoxEvent event, void* parameter = nullptr) { if (EventsSuspended()) return nullptr; if (eventCallback != nullptr) return eventCallback(this, event, parameter); else return nullptr; }
private:
inline static TextBoxEventCallbackType eventCallback = nullptr;
public:
TextBox();
protected:
virtual ~TextBox();
private:
BYREF_ONLY(TextBox);

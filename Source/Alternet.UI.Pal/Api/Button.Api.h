// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2025 AlterNET Software.</auto-generated>

#pragma once

#include "Button.h"
#include "Image.h"
#include "ApiUtils.h"
#include "Exceptions.h"

using namespace Alternet::UI;

ALTERNET_UI_API Button* Button_Create_()
{
    return MarshalExceptions<Button*>([&](){
        return new Button();
    });
}

ALTERNET_UI_API c_bool Button_GetImagesEnabled_()
{
    return MarshalExceptions<c_bool>([&](){
        return Button::GetImagesEnabled();
    });
}

ALTERNET_UI_API void Button_SetImagesEnabled_(c_bool value)
{
    MarshalExceptions<void>([&](){
        Button::SetImagesEnabled(value);
    });
}

ALTERNET_UI_API c_bool Button_GetExactFit_(Button* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetExactFit();
    });
}

ALTERNET_UI_API void Button_SetExactFit_(Button* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetExactFit(value);
    });
}

ALTERNET_UI_API c_bool Button_GetHasBorder_(Button* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetHasBorder();
    });
}

ALTERNET_UI_API void Button_SetHasBorder_(Button* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetHasBorder(value);
    });
}

ALTERNET_UI_API Image* Button_GetNormalImage_(Button* obj)
{
    return MarshalExceptions<Image*>([&](){
        return obj->GetNormalImage();
    });
}

ALTERNET_UI_API void Button_SetNormalImage_(Button* obj, Image* value)
{
    MarshalExceptions<void>([&](){
        obj->SetNormalImage(value);
    });
}

ALTERNET_UI_API Image* Button_GetHoveredImage_(Button* obj)
{
    return MarshalExceptions<Image*>([&](){
        return obj->GetHoveredImage();
    });
}

ALTERNET_UI_API void Button_SetHoveredImage_(Button* obj, Image* value)
{
    MarshalExceptions<void>([&](){
        obj->SetHoveredImage(value);
    });
}

ALTERNET_UI_API Image* Button_GetPressedImage_(Button* obj)
{
    return MarshalExceptions<Image*>([&](){
        return obj->GetPressedImage();
    });
}

ALTERNET_UI_API void Button_SetPressedImage_(Button* obj, Image* value)
{
    MarshalExceptions<void>([&](){
        obj->SetPressedImage(value);
    });
}

ALTERNET_UI_API Image* Button_GetDisabledImage_(Button* obj)
{
    return MarshalExceptions<Image*>([&](){
        return obj->GetDisabledImage();
    });
}

ALTERNET_UI_API void Button_SetDisabledImage_(Button* obj, Image* value)
{
    MarshalExceptions<void>([&](){
        obj->SetDisabledImage(value);
    });
}

ALTERNET_UI_API Image* Button_GetFocusedImage_(Button* obj)
{
    return MarshalExceptions<Image*>([&](){
        return obj->GetFocusedImage();
    });
}

ALTERNET_UI_API void Button_SetFocusedImage_(Button* obj, Image* value)
{
    MarshalExceptions<void>([&](){
        obj->SetFocusedImage(value);
    });
}

ALTERNET_UI_API c_bool Button_GetTextVisible_(Button* obj)
{
    return MarshalExceptions<c_bool>([&](){
        return obj->GetTextVisible();
    });
}

ALTERNET_UI_API void Button_SetTextVisible_(Button* obj, c_bool value)
{
    MarshalExceptions<void>([&](){
        obj->SetTextVisible(value);
    });
}

ALTERNET_UI_API int Button_GetTextAlign_(Button* obj)
{
    return MarshalExceptions<int>([&](){
        return obj->GetTextAlign();
    });
}

ALTERNET_UI_API void Button_SetTextAlign_(Button* obj, int value)
{
    MarshalExceptions<void>([&](){
        obj->SetTextAlign(value);
    });
}

ALTERNET_UI_API void Button_SetImagePosition_(Button* obj, int dir)
{
    MarshalExceptions<void>([&](){
        obj->SetImagePosition(dir);
    });
}

ALTERNET_UI_API void Button_SetImageMargins_(Button* obj, float x, float y)
{
    MarshalExceptions<void>([&](){
        obj->SetImageMargins(x, y);
    });
}

ALTERNET_UI_API void Button_SetEventCallback_(Button::ButtonEventCallbackType callback)
{
    Button::SetEventCallback(callback);
}


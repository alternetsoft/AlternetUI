// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2022.</auto-generated>
#nullable enable

using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Security;
namespace Alternet.UI.Native
{
    internal abstract class MessageBox : NativeObject
    {
        static MessageBox()
        {
        }
        
        private MessageBox()
        {
        }
        
        public MessageBox(IntPtr nativePointer) : base(nativePointer)
        {
        }
        
        public static MessageBoxResult Show(Window? owner, string text, string? caption, MessageBoxButtons buttons, MessageBoxIcon icon, MessageBoxDefaultButton defaultButton)
        {
            var n = NativeApi.MessageBox__Show_(owner?.NativePointer ?? IntPtr.Zero, text, caption, buttons, icon, defaultButton);
            var m = n;
            return m;
        }
        
        
        [SuppressUnmanagedCodeSecurity]
        private class NativeApi : NativeApiProvider
        {
            static NativeApi() => Initialize();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern MessageBoxResult MessageBox__Show_(IntPtr owner, string text, string? caption, MessageBoxButtons buttons, MessageBoxIcon icon, MessageBoxDefaultButton defaultButton);
            
        }
    }
}

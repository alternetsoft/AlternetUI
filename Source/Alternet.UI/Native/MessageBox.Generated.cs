// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2025 AlterNET Software.</auto-generated>
#nullable enable
#pragma warning disable

using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Security;
namespace Alternet.UI.Native
{
    internal abstract partial class MessageBox : NativeObject
    {
        static MessageBox()
        {
        }
        
        private MessageBox()
        {
        }
        
        public MessageBox(IntPtr nativePointer) : base(nativePointer)
        {
        }
        
        public static Alternet.UI.DialogResult Show(Window? owner, string text, string? caption, Alternet.UI.MessageBoxButtons buttons, Alternet.UI.MessageBoxIcon icon, Alternet.UI.MessageBoxDefaultButton defaultButton)
        {
            return NativeApi.MessageBoxObj_Show_(owner?.NativePointer ?? IntPtr.Zero, text, caption, buttons, icon, defaultButton);
        }
        
        
        [SuppressUnmanagedCodeSecurity]
        public class NativeApi : NativeApiProvider
        {
            static NativeApi() => Initialize();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.UI.DialogResult MessageBoxObj_Show_(IntPtr owner, string text, string? caption, Alternet.UI.MessageBoxButtons buttons, Alternet.UI.MessageBoxIcon icon, Alternet.UI.MessageBoxDefaultButton defaultButton);
            
        }
    }
}

// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>
#nullable enable
#pragma warning disable

using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Security;
namespace Alternet.UI.Native
{
    internal abstract class Sizer : NativeObject
    {
        static Sizer()
        {
        }
        
        protected Sizer()
        {
        }
        
        public Sizer(IntPtr nativePointer) : base(nativePointer)
        {
        }
        
        public System.IntPtr AddWindow(System.IntPtr window, int proportion, int flag, int border, System.IntPtr userData)
        {
            CheckDisposed();
            var n = NativeApi.Sizer_AddWindow_(NativePointer, window, proportion, flag, border, userData);
            var m = n;
            return m;
        }
        
        
        [SuppressUnmanagedCodeSecurity]
        public class NativeApi : NativeApiProvider
        {
            static NativeApi() => Initialize();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr Sizer_AddWindow_(IntPtr obj, System.IntPtr window, int proportion, int flag, int border, System.IntPtr userData);
            
        }
    }
}

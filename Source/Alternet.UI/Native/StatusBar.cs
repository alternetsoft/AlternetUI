// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2023 AlterNET Software.</auto-generated>
#nullable enable
#pragma warning disable

using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Security;
namespace Alternet.UI.Native
{
    internal class StatusBar : Control
    {
        static StatusBar()
        {
        }
        
        public StatusBar()
        {
            SetNativePointer(NativeApi.StatusBar_Create_());
        }
        
        public StatusBar(IntPtr nativePointer) : base(nativePointer)
        {
        }
        
        public int PanelCount
        {
            get
            {
                CheckDisposed();
                return NativeApi.StatusBar_GetPanelCount_(NativePointer);
            }
            
        }
        
        public bool SizingGripVisible
        {
            get
            {
                CheckDisposed();
                return NativeApi.StatusBar_GetSizingGripVisible_(NativePointer);
            }
            
            set
            {
                CheckDisposed();
                NativeApi.StatusBar_SetSizingGripVisible_(NativePointer, value);
            }
        }
        
        public void InsertPanelAt(int index, StatusBarPanel item)
        {
            CheckDisposed();
            NativeApi.StatusBar_InsertPanelAt_(NativePointer, index, item.NativePointer);
        }
        
        public void RemovePanelAt(int index)
        {
            CheckDisposed();
            NativeApi.StatusBar_RemovePanelAt_(NativePointer, index);
        }
        
        
        [SuppressUnmanagedCodeSecurity]
        public class NativeApi : NativeApiProvider
        {
            static NativeApi() => Initialize();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern IntPtr StatusBar_Create_();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern int StatusBar_GetPanelCount_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool StatusBar_GetSizingGripVisible_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void StatusBar_SetSizingGripVisible_(IntPtr obj, bool value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void StatusBar_InsertPanelAt_(IntPtr obj, int index, IntPtr item);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void StatusBar_RemovePanelAt_(IntPtr obj, int index);
            
        }
    }
}

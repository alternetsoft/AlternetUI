// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2022.</auto-generated>
#nullable enable

using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Security;
namespace Alternet.UI.Native
{
    internal class UnmanagedStream : NativeObject
    {
        static UnmanagedStream()
        {
        }
        
        public UnmanagedStream()
        {
            SetNativePointer(NativeApi.UnmanagedStream_Create_());
        }
        
        public UnmanagedStream(IntPtr nativePointer) : base(nativePointer)
        {
        }
        
        public long Length
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.UnmanagedStream_GetLength_(NativePointer);
                var m = n;
                return m;
            }
            
        }
        
        public bool IsOK
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.UnmanagedStream_GetIsOK_(NativePointer);
                var m = n;
                return m;
            }
            
        }
        
        public bool IsSeekable
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.UnmanagedStream_GetIsSeekable_(NativePointer);
                var m = n;
                return m;
            }
            
        }
        
        public long Position
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.UnmanagedStream_GetPosition_(NativePointer);
                var m = n;
                return m;
            }
            
            set
            {
                CheckDisposed();
                NativeApi.UnmanagedStream_SetPosition_(NativePointer, value);
            }
        }
        
        public System.IntPtr Read(System.Byte[] buffer, System.IntPtr length)
        {
            CheckDisposed();
            var n = NativeApi.UnmanagedStream_Read_(NativePointer, buffer, buffer.Length, length);
            var m = n;
            return m;
        }
        
        
        [SuppressUnmanagedCodeSecurity]
        private class NativeApi : NativeApiProvider
        {
            static NativeApi() => Initialize();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern IntPtr UnmanagedStream_Create_();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern long UnmanagedStream_GetLength_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool UnmanagedStream_GetIsOK_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool UnmanagedStream_GetIsSeekable_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern long UnmanagedStream_GetPosition_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void UnmanagedStream_SetPosition_(IntPtr obj, long value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr UnmanagedStream_Read_(IntPtr obj, [Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex = 2)]System.Byte[] buffer, int bufferCount, System.IntPtr length);
            
        }
    }
}

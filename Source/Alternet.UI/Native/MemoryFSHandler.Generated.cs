// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>
#nullable enable
#pragma warning disable

using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Security;
namespace Alternet.UI.Native
{
    internal partial class MemoryFSHandler : NativeObject
    {
        static MemoryFSHandler()
        {
        }
        
        public MemoryFSHandler()
        {
            SetNativePointer(NativeApi.MemoryFSHandler_Create_());
        }
        
        public MemoryFSHandler(IntPtr nativePointer) : base(nativePointer)
        {
        }
        
        public static void RemoveFile(string filename)
        {
            NativeApi.MemoryFSHandler_RemoveFile_(filename);
        }
        
        public static void AddTextFileWithMimeType(string filename, string textdata, string mimetype)
        {
            NativeApi.MemoryFSHandler_AddTextFileWithMimeType_(filename, textdata, mimetype);
        }
        
        public static void AddTextFile(string filename, string textdata)
        {
            NativeApi.MemoryFSHandler_AddTextFile_(filename, textdata);
        }
        
        public static void AddFile(string filename, System.IntPtr binarydata, int size)
        {
            NativeApi.MemoryFSHandler_AddFile_(filename, binarydata, size);
        }
        
        public static void AddFileWithMimeType(string filename, System.IntPtr binarydata, int size, string mimetype)
        {
            NativeApi.MemoryFSHandler_AddFileWithMimeType_(filename, binarydata, size, mimetype);
        }
        
        
        [SuppressUnmanagedCodeSecurity]
        public class NativeApi : NativeApiProvider
        {
            static NativeApi() => Initialize();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern IntPtr MemoryFSHandler_Create_();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void MemoryFSHandler_RemoveFile_(string filename);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void MemoryFSHandler_AddTextFileWithMimeType_(string filename, string textdata, string mimetype);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void MemoryFSHandler_AddTextFile_(string filename, string textdata);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void MemoryFSHandler_AddFile_(string filename, System.IntPtr binarydata, int size);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void MemoryFSHandler_AddFileWithMimeType_(string filename, System.IntPtr binarydata, int size, string mimetype);
            
        }
    }
}

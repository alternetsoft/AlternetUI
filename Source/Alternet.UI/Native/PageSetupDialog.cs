// <auto-generated>This code was generated by a tool, DO NOT MODIFY MANUALLY. Copyright AlterNET, 2023.</auto-generated>
#nullable enable

using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Security;
namespace Alternet.UI.Native
{
    internal class PageSetupDialog : NativeObject
    {
        static PageSetupDialog()
        {
        }
        
        public PageSetupDialog()
        {
            SetNativePointer(NativeApi.PageSetupDialog_Create_());
        }
        
        public PageSetupDialog(IntPtr nativePointer) : base(nativePointer)
        {
        }
        
        public PrintDocument? Document
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.PageSetupDialog_GetDocument_(NativePointer);
                var m = NativeObject.GetFromNativePointer<PrintDocument>(n, p => new PrintDocument(p));
                ReleaseNativeObjectPointer(n);
                return m;
            }
            
            set
            {
                CheckDisposed();
                NativeApi.PageSetupDialog_SetDocument_(NativePointer, value?.NativePointer ?? IntPtr.Zero);
            }
        }
        
        public Alternet.UI.Thickness MinMargins
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.PageSetupDialog_GetMinMargins_(NativePointer);
                var m = n;
                return m;
            }
            
            set
            {
                CheckDisposed();
                NativeApi.PageSetupDialog_SetMinMargins_(NativePointer, value);
            }
        }
        
        public bool MinMarginsValueSet
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.PageSetupDialog_GetMinMarginsValueSet_(NativePointer);
                var m = n;
                return m;
            }
            
            set
            {
                CheckDisposed();
                NativeApi.PageSetupDialog_SetMinMarginsValueSet_(NativePointer, value);
            }
        }
        
        public bool AllowMargins
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.PageSetupDialog_GetAllowMargins_(NativePointer);
                var m = n;
                return m;
            }
            
            set
            {
                CheckDisposed();
                NativeApi.PageSetupDialog_SetAllowMargins_(NativePointer, value);
            }
        }
        
        public bool AllowOrientation
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.PageSetupDialog_GetAllowOrientation_(NativePointer);
                var m = n;
                return m;
            }
            
            set
            {
                CheckDisposed();
                NativeApi.PageSetupDialog_SetAllowOrientation_(NativePointer, value);
            }
        }
        
        public bool AllowPaper
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.PageSetupDialog_GetAllowPaper_(NativePointer);
                var m = n;
                return m;
            }
            
            set
            {
                CheckDisposed();
                NativeApi.PageSetupDialog_SetAllowPaper_(NativePointer, value);
            }
        }
        
        public bool AllowPrinter
        {
            get
            {
                CheckDisposed();
                var n = NativeApi.PageSetupDialog_GetAllowPrinter_(NativePointer);
                var m = n;
                return m;
            }
            
            set
            {
                CheckDisposed();
                NativeApi.PageSetupDialog_SetAllowPrinter_(NativePointer, value);
            }
        }
        
        public ModalResult ShowModal(Window? owner)
        {
            CheckDisposed();
            var n = NativeApi.PageSetupDialog_ShowModal_(NativePointer, owner?.NativePointer ?? IntPtr.Zero);
            var m = n;
            return m;
        }
        
        
        [SuppressUnmanagedCodeSecurity]
        public class NativeApi : NativeApiProvider
        {
            static NativeApi() => Initialize();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern IntPtr PageSetupDialog_Create_();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern IntPtr PageSetupDialog_GetDocument_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PageSetupDialog_SetDocument_(IntPtr obj, IntPtr value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern NativeApiTypes.Thickness PageSetupDialog_GetMinMargins_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PageSetupDialog_SetMinMargins_(IntPtr obj, NativeApiTypes.Thickness value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool PageSetupDialog_GetMinMarginsValueSet_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PageSetupDialog_SetMinMarginsValueSet_(IntPtr obj, bool value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool PageSetupDialog_GetAllowMargins_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PageSetupDialog_SetAllowMargins_(IntPtr obj, bool value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool PageSetupDialog_GetAllowOrientation_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PageSetupDialog_SetAllowOrientation_(IntPtr obj, bool value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool PageSetupDialog_GetAllowPaper_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PageSetupDialog_SetAllowPaper_(IntPtr obj, bool value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool PageSetupDialog_GetAllowPrinter_(IntPtr obj);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PageSetupDialog_SetAllowPrinter_(IntPtr obj, bool value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern ModalResult PageSetupDialog_ShowModal_(IntPtr obj, IntPtr owner);
            
        }
    }
}

// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>
#nullable enable
#pragma warning disable

using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Security;
namespace Alternet.UI.Native
{
    internal partial class PropertyGridVariant : NativeObject
    {
        static PropertyGridVariant()
        {
        }
        
        public PropertyGridVariant()
        {
            SetNativePointer(NativeApi.PropertyGridVariant_Create_());
        }
        
        public PropertyGridVariant(IntPtr nativePointer) : base(nativePointer)
        {
        }
        
        public static void Delete(System.IntPtr handle)
        {
            NativeApi.PropertyGridVariant_Delete_(handle);
        }
        
        public static System.IntPtr CreateVariant()
        {
            return NativeApi.PropertyGridVariant_CreateVariant_();
        }
        
        public static bool IsNull(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_IsNull_(handle);
        }
        
        public static bool Unshare(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_Unshare_(handle);
        }
        
        public static void MakeNull(System.IntPtr handle)
        {
            NativeApi.PropertyGridVariant_MakeNull_(handle);
        }
        
        public static void Clear(System.IntPtr handle)
        {
            NativeApi.PropertyGridVariant_Clear_(handle);
        }
        
        public static string GetValueType(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetValueType_(handle);
        }
        
        public static bool IsType(System.IntPtr handle, string type)
        {
            return NativeApi.PropertyGridVariant_IsType_(handle, type);
        }
        
        public static string MakeString(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_MakeString_(handle);
        }
        
        public static Alternet.Drawing.Color GetColor(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetColor_(handle);
        }
        
        public static double GetDouble(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetDouble_(handle);
        }
        
        public static bool GetBool(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetBool_(handle);
        }
        
        public static int GetInt(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetInt_(handle);
        }
        
        public static uint GetUInt(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetUInt_(handle);
        }
        
        public static long GetLong(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetLong_(handle);
        }
        
        public static ulong GetULong(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetULong_(handle);
        }
        
        public static DateTime GetDateTime(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetDateTime_(handle);
        }
        
        public static string GetString(System.IntPtr handle)
        {
            return NativeApi.PropertyGridVariant_GetString_(handle);
        }
        
        public static void SetColor(System.IntPtr handle, Alternet.Drawing.Color val, uint kind)
        {
            NativeApi.PropertyGridVariant_SetColor_(handle, val, kind);
        }
        
        public static void SetDouble(System.IntPtr handle, double val)
        {
            NativeApi.PropertyGridVariant_SetDouble_(handle, val);
        }
        
        public static void SetBool(System.IntPtr handle, bool val)
        {
            NativeApi.PropertyGridVariant_SetBool_(handle, val);
        }
        
        public static void SetLong(System.IntPtr handle, long val)
        {
            NativeApi.PropertyGridVariant_SetLong_(handle, val);
        }
        
        public static void SetULong(System.IntPtr handle, ulong val)
        {
            NativeApi.PropertyGridVariant_SetULong_(handle, val);
        }
        
        public static void SetInt(System.IntPtr handle, int val)
        {
            NativeApi.PropertyGridVariant_SetInt_(handle, val);
        }
        
        public static void SetUInt(System.IntPtr handle, uint val)
        {
            NativeApi.PropertyGridVariant_SetUInt_(handle, val);
        }
        
        public static void SetShort(System.IntPtr handle, short val)
        {
            NativeApi.PropertyGridVariant_SetShort_(handle, val);
        }
        
        public static void SetDateTime(System.IntPtr handle, DateTime val)
        {
            NativeApi.PropertyGridVariant_SetDateTime_(handle, val);
        }
        
        public static void SetString(System.IntPtr handle, string value)
        {
            NativeApi.PropertyGridVariant_SetString_(handle, value);
        }
        
        public static uint GetLastColorKind()
        {
            return NativeApi.PropertyGridVariant_GetLastColorKind_();
        }
        
        
        [SuppressUnmanagedCodeSecurity]
        public class NativeApi : NativeApiProvider
        {
            static NativeApi() => Initialize();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern IntPtr PropertyGridVariant_Create_();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_Delete_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr PropertyGridVariant_CreateVariant_();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool PropertyGridVariant_IsNull_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool PropertyGridVariant_Unshare_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_MakeNull_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_Clear_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern string PropertyGridVariant_GetValueType_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool PropertyGridVariant_IsType_(System.IntPtr handle, string type);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern string PropertyGridVariant_MakeString_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern NativeApiTypes.Color PropertyGridVariant_GetColor_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern double PropertyGridVariant_GetDouble_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool PropertyGridVariant_GetBool_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern int PropertyGridVariant_GetInt_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern uint PropertyGridVariant_GetUInt_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern long PropertyGridVariant_GetLong_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern ulong PropertyGridVariant_GetULong_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern NativeApiTypes.DateTime PropertyGridVariant_GetDateTime_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern string PropertyGridVariant_GetString_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetColor_(System.IntPtr handle, NativeApiTypes.Color val, uint kind);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetDouble_(System.IntPtr handle, double val);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetBool_(System.IntPtr handle, bool val);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetLong_(System.IntPtr handle, long val);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetULong_(System.IntPtr handle, ulong val);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetInt_(System.IntPtr handle, int val);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetUInt_(System.IntPtr handle, uint val);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetShort_(System.IntPtr handle, short val);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetDateTime_(System.IntPtr handle, NativeApiTypes.DateTime val);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void PropertyGridVariant_SetString_(System.IntPtr handle, string value);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern uint PropertyGridVariant_GetLastColorKind_();
            
        }
    }
}

// <auto-generated> DO NOT MODIFY MANUALLY. Copyright (c) 2024 AlterNET Software.</auto-generated>
#nullable enable
#pragma warning disable

using System;
using System.Runtime.InteropServices;
using System.ComponentModel;
using System.Security;
namespace Alternet.UI.Native
{
    internal partial class SizerItem : NativeObject
    {
        static SizerItem()
        {
        }
        
        public SizerItem()
        {
            SetNativePointer(NativeApi.SizerItem_Create_());
        }
        
        public SizerItem(IntPtr nativePointer) : base(nativePointer)
        {
        }
        
        public static System.IntPtr CreateSizerItem(System.IntPtr window, int proportion, int flag, int border, System.IntPtr userData)
        {
            return NativeApi.SizerItem_CreateSizerItem_(window, proportion, flag, border, userData);
        }
        
        public static System.IntPtr CreateSizerItem2(System.IntPtr window, System.IntPtr sizerFlags)
        {
            return NativeApi.SizerItem_CreateSizerItem2_(window, sizerFlags);
        }
        
        public static System.IntPtr CreateSizerItem3(System.IntPtr sizer, int proportion, int flag, int border, System.IntPtr userData)
        {
            return NativeApi.SizerItem_CreateSizerItem3_(sizer, proportion, flag, border, userData);
        }
        
        public static System.IntPtr CreateSizerItem4(System.IntPtr sizer, System.IntPtr sizerFlags)
        {
            return NativeApi.SizerItem_CreateSizerItem4_(sizer, sizerFlags);
        }
        
        public static System.IntPtr CreateSizerItem5(int width, int height, int proportion, int flag, int border, System.IntPtr userData)
        {
            return NativeApi.SizerItem_CreateSizerItem5_(width, height, proportion, flag, border, userData);
        }
        
        public static System.IntPtr CreateSizerItem6(int width, int height, System.IntPtr sizerFlags)
        {
            return NativeApi.SizerItem_CreateSizerItem6_(width, height, sizerFlags);
        }
        
        public static System.IntPtr CreateSizerItem7()
        {
            return NativeApi.SizerItem_CreateSizerItem7_();
        }
        
        public static void DeleteWindows(System.IntPtr handle)
        {
            NativeApi.SizerItem_DeleteWindows_(handle);
        }
        
        public static void DetachSizer(System.IntPtr handle)
        {
            NativeApi.SizerItem_DetachSizer_(handle);
        }
        
        public static void DetachWindow(System.IntPtr handle)
        {
            NativeApi.SizerItem_DetachWindow_(handle);
        }
        
        public static Alternet.Drawing.SizeI GetSize(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetSize_(handle);
        }
        
        public static Alternet.Drawing.SizeI CalcMin(System.IntPtr handle)
        {
            return NativeApi.SizerItem_CalcMin_(handle);
        }
        
        public static void SetDimension(System.IntPtr handle, Alternet.Drawing.PointI pos, Alternet.Drawing.SizeI size)
        {
            NativeApi.SizerItem_SetDimension_(handle, pos, size);
        }
        
        public static Alternet.Drawing.SizeI GetMinSize(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetMinSize_(handle);
        }
        
        public static Alternet.Drawing.SizeI GetMinSizeWithBorder(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetMinSizeWithBorder_(handle);
        }
        
        public static Alternet.Drawing.SizeI GetMaxSize(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetMaxSize_(handle);
        }
        
        public static Alternet.Drawing.SizeI GetMaxSizeWithBorder(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetMaxSizeWithBorder_(handle);
        }
        
        public static void SetMinSize(System.IntPtr handle, int x, int y)
        {
            NativeApi.SizerItem_SetMinSize_(handle, x, y);
        }
        
        public static void SetInitSize(System.IntPtr handle, int x, int y)
        {
            NativeApi.SizerItem_SetInitSize_(handle, x, y);
        }
        
        public static void SetRatio(System.IntPtr handle, int width, int height)
        {
            NativeApi.SizerItem_SetRatio_(handle, width, height);
        }
        
        public static void SetRatio2(System.IntPtr handle, float ratio)
        {
            NativeApi.SizerItem_SetRatio2_(handle, ratio);
        }
        
        public static float GetRatio(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetRatio_(handle);
        }
        
        public static Alternet.Drawing.RectI GetRect(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetRect_(handle);
        }
        
        public static void SetId(System.IntPtr handle, int id)
        {
            NativeApi.SizerItem_SetId_(handle, id);
        }
        
        public static int GetId(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetId_(handle);
        }
        
        public static bool IsWindow(System.IntPtr handle)
        {
            return NativeApi.SizerItem_IsWindow_(handle);
        }
        
        public static bool IsSizer(System.IntPtr handle)
        {
            return NativeApi.SizerItem_IsSizer_(handle);
        }
        
        public static bool IsSpacer(System.IntPtr handle)
        {
            return NativeApi.SizerItem_IsSpacer_(handle);
        }
        
        public static void SetProportion(System.IntPtr handle, int proportion)
        {
            NativeApi.SizerItem_SetProportion_(handle, proportion);
        }
        
        public static int GetProportion(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetProportion_(handle);
        }
        
        public static void SetFlag(System.IntPtr handle, int flag)
        {
            NativeApi.SizerItem_SetFlag_(handle, flag);
        }
        
        public static int GetFlag(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetFlag_(handle);
        }
        
        public static void SetBorder(System.IntPtr handle, int border)
        {
            NativeApi.SizerItem_SetBorder_(handle, border);
        }
        
        public static int GetBorder(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetBorder_(handle);
        }
        
        public static System.IntPtr GetWindow(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetWindow_(handle);
        }
        
        public static System.IntPtr GetSizer(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetSizer_(handle);
        }
        
        public static Alternet.Drawing.SizeI GetSpacer(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetSpacer_(handle);
        }
        
        public static bool IsShown(System.IntPtr handle)
        {
            return NativeApi.SizerItem_IsShown_(handle);
        }
        
        public static void Show(System.IntPtr handle, bool show)
        {
            NativeApi.SizerItem_Show_(handle, show);
        }
        
        public static void SetUserData(System.IntPtr handle, System.IntPtr userData)
        {
            NativeApi.SizerItem_SetUserData_(handle, userData);
        }
        
        public static System.IntPtr GetUserData(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetUserData_(handle);
        }
        
        public static Alternet.Drawing.PointI GetPosition(System.IntPtr handle)
        {
            return NativeApi.SizerItem_GetPosition_(handle);
        }
        
        public static bool InformFirstDirection(System.IntPtr handle, int direction, int size, int availableOtherDir)
        {
            return NativeApi.SizerItem_InformFirstDirection_(handle, direction, size, availableOtherDir);
        }
        
        public static void AssignWindow(System.IntPtr handle, System.IntPtr window)
        {
            NativeApi.SizerItem_AssignWindow_(handle, window);
        }
        
        public static void AssignSizer(System.IntPtr handle, System.IntPtr sizer)
        {
            NativeApi.SizerItem_AssignSizer_(handle, sizer);
        }
        
        public static void AssignSpacer(System.IntPtr handle, int w, int h)
        {
            NativeApi.SizerItem_AssignSpacer_(handle, w, h);
        }
        
        
        [SuppressUnmanagedCodeSecurity]
        public class NativeApi : NativeApiProvider
        {
            static NativeApi() => Initialize();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern IntPtr SizerItem_Create_();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_CreateSizerItem_(System.IntPtr window, int proportion, int flag, int border, System.IntPtr userData);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_CreateSizerItem2_(System.IntPtr window, System.IntPtr sizerFlags);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_CreateSizerItem3_(System.IntPtr sizer, int proportion, int flag, int border, System.IntPtr userData);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_CreateSizerItem4_(System.IntPtr sizer, System.IntPtr sizerFlags);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_CreateSizerItem5_(int width, int height, int proportion, int flag, int border, System.IntPtr userData);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_CreateSizerItem6_(int width, int height, System.IntPtr sizerFlags);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_CreateSizerItem7_();
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_DeleteWindows_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_DetachSizer_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_DetachWindow_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.Drawing.SizeI SizerItem_GetSize_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.Drawing.SizeI SizerItem_CalcMin_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetDimension_(System.IntPtr handle, Alternet.Drawing.PointI pos, Alternet.Drawing.SizeI size);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.Drawing.SizeI SizerItem_GetMinSize_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.Drawing.SizeI SizerItem_GetMinSizeWithBorder_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.Drawing.SizeI SizerItem_GetMaxSize_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.Drawing.SizeI SizerItem_GetMaxSizeWithBorder_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetMinSize_(System.IntPtr handle, int x, int y);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetInitSize_(System.IntPtr handle, int x, int y);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetRatio_(System.IntPtr handle, int width, int height);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetRatio2_(System.IntPtr handle, float ratio);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern float SizerItem_GetRatio_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.Drawing.RectI SizerItem_GetRect_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetId_(System.IntPtr handle, int id);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern int SizerItem_GetId_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool SizerItem_IsWindow_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool SizerItem_IsSizer_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool SizerItem_IsSpacer_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetProportion_(System.IntPtr handle, int proportion);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern int SizerItem_GetProportion_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetFlag_(System.IntPtr handle, int flag);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern int SizerItem_GetFlag_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetBorder_(System.IntPtr handle, int border);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern int SizerItem_GetBorder_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_GetWindow_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_GetSizer_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.Drawing.SizeI SizerItem_GetSpacer_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool SizerItem_IsShown_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_Show_(System.IntPtr handle, bool show);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_SetUserData_(System.IntPtr handle, System.IntPtr userData);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern System.IntPtr SizerItem_GetUserData_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern Alternet.Drawing.PointI SizerItem_GetPosition_(System.IntPtr handle);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern bool SizerItem_InformFirstDirection_(System.IntPtr handle, int direction, int size, int availableOtherDir);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_AssignWindow_(System.IntPtr handle, System.IntPtr window);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_AssignSizer_(System.IntPtr handle, System.IntPtr sizer);
            
            [DllImport(NativeModuleName, CallingConvention = CallingConvention.Cdecl)]
            public static extern void SizerItem_AssignSpacer_(System.IntPtr handle, int w, int h);
            
        }
    }
}

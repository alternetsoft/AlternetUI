using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

#pragma warning disable

namespace Alternet.UI
{
    /// <summary>
    /// Native key codes.
    /// </summary>
    public enum NativeKeyCode
    {
        None = 0,

        ControlA = 1,
        ControlB,
        ControlC,
        ControlD,
        ControlE,
        ControlF,
        ControlG,
        ControlH,
        ControlI,
        ControlJ,
        ControlK,
        ControlL,
        ControlM,
        ControlN,
        ControlO,
        ControlP,
        ControlQ,
        ControlR,
        ControlS,
        ControlT,
        ControlU,
        ControlV,
        ControlW,
        ControlX,
        ControlY,
        ControlZ,

        Back = 8, /* backspace */
        Tab = 9,
        Return = 13,
        Escape = 27,

        /* values from 33 to 126 are reserved for the standard ASCII characters */

        Space = 32,
        Delete = 127,

        /* values from 128 to 255 are reserved for ASCII extended characters
           (note that there isn't a single fixed standard for the meaning
           of these values; avoid them in portable apps!) */

        /* These are not compatible with unicode characters.
           If you want to get a unicode character from a key event, use
           wxKeyEvent::GetUnicodeKey                                    */
        Start = 300,
        LButton,
        RButton,
        Cancel,
        MButton,
        Clear,
        Shift,
        Alt,
        Control,
        Menu,
        Pause,
        Capital,
        End,
        Home,
        Left,
        Up,
        Right,
        Down,
        Select,
        Print,
        Execute,
        Snapshot,
        Insert,
        Help,
        Numpad0,
        Numpad1,
        Numpad2,
        Numpad3,
        Numpad4,
        Numpad5,
        Numpad6,
        Numpad7,
        Numpad8,
        Numpad9,
        Multiply,
        Add,
        Separator,
        Subtract,
        Decimal,
        Divide,
        F1,
        F2,
        F3,
        F4,
        F5,
        F6,
        F7,
        F8,
        F9,
        F10,
        F11,
        F12,
        F13,
        F14,
        F15,
        F16,
        F17,
        F18,
        F19,
        F20,
        F21,
        F22,
        F23,
        F24,
        NumLock,
        Scroll,
        PageUp,
        PageDown,
        NumpadSpace,
        NumpadTab,
        NumpadEnter,
        NumpadF1,
        NumpadF2,
        NumpadF3,
        NumpadF4,
        NumpadHome,
        NumpadLeft,
        NumpadUp,
        NumpadRight,
        NumpadDown,
        NumpadPageUp,
        NumpadPageDown,
        NumpadEnd,
        NumpadBegin,
        NumpadInsert,
        NumpadDelete,
        NumpadEqual,
        NumpadMultiply,
        NumpadAdd,
        NumpadSeparator,
        NumpadSubtract,
        NumpadDecimal,
        NumpadDivide,

        WindowsLeft,
        WindowsRight,
        WindowsMenu,

        RawControlMacOs = WindowsMenu + 1,

        RawControl = Control,

        Command = Control,

        /* Hardware-specific buttons */
        Special1 = WindowsMenu + 2, /* Skip RAW_CONTROL if necessary */
        Special2,
        Special3,
        Special4,
        Special5,
        Special6,
        Special7,
        Special8,
        Special9,
        Special10,
        Special11,
        Special12,
        Special13,
        Special14,
        Special15,
        Special16,
        Special17,
        Special18,
        Special19,
        Special20,

        BrowserBack,
        BrowserForward,
        BrowserRefresh,
        BrowserStop,
        BrowserSearch,
        BrowserFavorites,
        BrowserHome,
        VolumeMute,
        VolumeDown,
        VolumeUp,
        MediaNextTrack,
        MediaPrevTrack,
        MediaStop,
        MediaPlayPause,
        LaunchMail,

        // Events for these keys are currently only generated by wxGTK, with the
        // exception of Launch{A,B}, see LaunchAPP{1,2} below.
        Launch0,
        Launch1,
        Launch2,
        Launch3,
        Launch4,
        Launch5,
        Launch6,
        Launch7,
        Launch8,
        Launch9,
        LaunchA,
        LaunchB,
        LaunchC,
        LaunchD,
        LaunchE,
        LaunchF,

        // These constants are the same as the corresponding GTK keys, so give them
        // the same value, but they are also generated by wxMSW.
        LaunchApp1 = LaunchA,
        LaunchApp2 = LaunchB,
    };

}

using System.CodeDom.Compiler;
using System.IO;

namespace Alternet.UI.Build.Tasks
{
    static class CSharpUIXmlCodeGenerator
    {
        public static string Generate(string uiXmlFileName, string uiXmlFileContents)
        {
            var codeWriter = new StringWriter();
            var w = new IndentedTextWriter(codeWriter);

            WriteHeader(w);

            w.WriteLine(@"
using System;
");
            w.WriteLine("namespace HelloWorldSample");

            using (new BlockIndent(w))
            {
                w.WriteLine($"partial class {Path.GetFileNameWithoutExtension(uiXmlFileName)} : Alternet.UI.Window");
                using (new BlockIndent(w))
                {
                    w.WriteLine("private bool contentLoaded;");
                    w.WriteLine();
                    w.WriteLine("[System.Diagnostics.DebuggerNonUserCodeAttribute()]");
                    w.WriteLine("public void InitializeComponent()");
                    using (new BlockIndent(w))
                    {
                        w.WriteLine("if (contentLoaded) return;");
                        w.WriteLine("contentLoaded = true;");
                    }
                }
            }

            return codeWriter.ToString();
        }

        private static void WriteHeader(IndentedTextWriter w)
        {
            w.WriteLine("//------------------------------------------------------------------------------");
            w.WriteLine("// <auto-generated>");
            w.WriteLine("//     This code was generated by a tool.");
            w.WriteLine("//     Changes to this file may cause incorrect behavior and will be lost if");
            w.WriteLine("//     the code is regenerated.");
            w.WriteLine("// </auto-generated>");
            w.WriteLine("//------------------------------------------------------------------------------");
            w.WriteLine();
        }
    }
}

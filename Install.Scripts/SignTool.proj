<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

<Import Project="..\Source\Keys\Private.props" Condition="Exists('..\Source\Keys\Private.props')"/>

<PropertyGroup Condition="$([MSBuild]::IsOsPlatform('Windows'))">

    <WindowsKitsRoot Condition="'$(WindowsKitsRoot)' == ''">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots', 'KitsRoot10', null, RegistryView.Registry32, RegistryView.Default))</WindowsKitsRoot>

    <SignToolPath Condition="'$(WindowsKitsRoot)' != '' And '$(SignToolPath)' == '' And exists('$(WindowsKitsRoot)bin\10.0.26100.0\')">$(WindowsKitsRoot)bin\10.0.26100.0\</SignToolPath>
    <SignToolPath Condition="'$(WindowsKitsRoot)' != '' And '$(SignToolPath)' == '' And exists('$(WindowsKitsRoot)bin\10.0.22621.0\')">$(WindowsKitsRoot)bin\10.0.22621.0\</SignToolPath>
    <SignToolPath Condition="'$(WindowsKitsRoot)' != '' And '$(SignToolPath)' == '' And exists('$(WindowsKitsRoot)bin\10.0.19041.0\')">$(WindowsKitsRoot)bin\10.0.19041.0\</SignToolPath>

    <SignToolPath Condition="'$(WindowsKitsRoot)' != '' And '$(SignToolPath)' == '' And exists('$(WindowsKitsRoot)bin\10.0.18362.0\')">$(WindowsKitsRoot)bin\10.0.18362.0\</SignToolPath>
    <SignToolPath Condition="'$(WindowsKitsRoot)' != '' And '$(SignToolPath)' == '' And exists('$(WindowsKitsRoot)bin\10.0.17763.0\')">$(WindowsKitsRoot)bin\10.0.17763.0\</SignToolPath>
    <SignToolPath Condition="'$(WindowsKitsRoot)' != '' And '$(SignToolPath)' == '' And exists('$(WindowsKitsRoot)bin\10.0.17134.0\')">$(WindowsKitsRoot)bin\10.0.17134.0\</SignToolPath>
    <SignToolPath Condition="'$(WindowsKitsRoot)' != '' And '$(SignToolPath)' == '' And exists('$(WindowsKitsRoot)bin\10.0.16299.0\')">$(WindowsKitsRoot)bin\10.0.16299.0\</SignToolPath>

    <SignToolExe>$(SignToolPath)\x64\signtool.exe</SignToolExe>
    <SignToolExe>$([System.IO.Path]::GetFullPath('$(SignToolExe)'))</SignToolExe>

    <ALTERNET_PFX>$(MSBuildThisFileDirectory)\..\Source\Keys\Alternet.pfx</ALTERNET_PFX>
    <ALTERNET_PFX>$([System.IO.Path]::GetFullPath('$(ALTERNET_PFX)'))</ALTERNET_PFX>

    <DllPathForSignTool>$([System.IO.Path]::GetFullPath('$(DllPathForSignTool)'))</DllPathForSignTool>

    <SignCommand>&quot;$(SignToolExe)&quot; sign /f &quot;$(ALTERNET_PFX)&quot; /p $(VsixSignPassword) /fd sha256 /tr http://timestamp.digicert.com /td SHA256 /v &quot;$(DllPathForSignTool)&quot;</SignCommand>
    <SignVerifyCommand>&quot;$(SignToolExe)&quot; verify /q /pa &quot;$(DllPathForSignTool)&quot;</SignVerifyCommand>

</PropertyGroup>

	<Target Name="WriteInfo" Condition="$([MSBuild]::IsOsPlatform('Windows')) and false">
		<Message Text="=======================" Importance="high" />
		<Message Text="SIGNTOOL" Importance="high" />
		<Message Text="DllPathForSignTool: $(DllPathForSignTool)" Importance="high" />
		<Message Text="SignToolExe: $(SignToolExe)" Importance="high" />
		<Message Text="WindowsKitsRoot: $(WindowsKitsRoot)" Importance="high" />
		<Message Text=">> SignCommand: $(SignCommand)" Importance="high" />
		<Message Text=">> SignVerifyCommand: $(SignVerifyCommand)" Importance="high" />
	</Target>

	<Target Name="DotNetSign" Condition="$([MSBuild]::IsOsPlatform('Windows'))">
		<CallTarget Targets="WriteInfo" />	
		<Message Text="Action: Sign" Importance="high" />
		<Message Text="=======================" Importance="high" />
        	<Exec Command="$(SignCommand)"/>
	</Target>

	<Target Name="SignVerify" Condition="$([MSBuild]::IsOsPlatform('Windows'))">
		<CallTarget Targets="WriteInfo" />	
		<Message Text="Action: Verify" Importance="high" />
		<Message Text="=======================" Importance="high" />
                <Exec Command="$(SignVerifyCommand)"/>
	</Target>
	
</Project>